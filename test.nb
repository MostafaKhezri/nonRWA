(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    449290,       8387]
NotebookOptionsPosition[    445169,       8244]
NotebookOutlinePosition[    446248,       8280]
CellTagsIndexPosition[    446075,       8273]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Level Crossing Package", "Title",
 CellChangeTimes->{{3.677619475075842*^9, 3.677619522770185*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Calling the package", "Subchapter"]], "Subsubsection",
 CellChangeTimes->{{3.677619547402103*^9, 3.67761955169003*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<nonRWA.m\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6774572354904413`*^9, 3.677457290839802*^9}, {
  3.6774573443051023`*^9, 3.677457414225868*^9}, {3.677457532784813*^9, 
  3.677457538748757*^9}, {3.677457655933495*^9, 3.67745765634179*^9}, {
  3.6774586587000523`*^9, 3.677458706603685*^9}, {3.6774587426855907`*^9, 
  3.677458751131466*^9}, {3.6774591203700123`*^9, 3.6774591285307417`*^9}, {
  3.677466768081428*^9, 3.677466769373393*^9}, {3.677467553157612*^9, 
  3.677467602262158*^9}, {3.677468543927198*^9, 3.67746854485493*^9}, {
  3.677468615593351*^9, 3.677468617030973*^9}, {3.677618899524043*^9, 
  3.6776189014580717`*^9}, {3.677619602547168*^9, 3.677619605938467*^9}, {
  3.680792817654451*^9, 3.680792818797935*^9}}],

Cell["\<\
In general, for any function you can type \
\[OpenCurlyDoubleQuote]?FunctionName\[CloseCurlyDoubleQuote] to get the help \
for that function\
\>", "Text",
 CellChangeTimes->{{3.677619612753433*^9, 3.677619655208935*^9}}]
}, Open  ]],

Cell[TextData[StyleBox["Diagonaling the system", "Chapter"]], "Section",
 CellChangeTimes->{{3.677619587529642*^9, 3.677619590193475*^9}, {
  3.680221295656179*^9, 3.6802213008215733`*^9}}],

Cell[CellGroupData[{

Cell["Synopsis", "Subchapter",
 CellChangeTimes->{{3.677619775544119*^9, 3.6776198085516644`*^9}, {
  3.677619884119048*^9, 3.677619886751001*^9}, {3.677621247095705*^9, 
  3.6776212558136806`*^9}, {3.677621317104512*^9, 3.677621320125226*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Diagonalize"}]], "Input",
 CellChangeTimes->{{3.677619658964815*^9, 3.677619664790587*^9}}],

Cell[BoxData[
 StyleBox["\<\"{Eigenvectors,Eigenenergies} = Diagonalize[\[Omega]q,\[Eta],\
\[Omega]r,g,g_num,ng,tmax,nmax]\\n\tTakes system parameters and gives \
properly sorted eigenstates and eigenvectos.\\n\tThe qubit is a transmon, and \
is capacitively (charge-charge) coupled to the resonator.\\n\tThe coupling \
between qubit and resoantor is RWA, or in other words is excitation \
preserving.\\n\\n\t\t\[Omega]q: Qubit frequency.\\n\t\t\[Eta]: Qubit \
anharmonicity.\\n\t\t\[Omega]r: Resonator frequency.\\n\t\tg: Coupling \
strenght between resonator and qubit, defined between |0,1> and |1,0> \
(|qubit-resonator>).\\n\t\tg_num: Numerical g. This can be used to reduce the \
nmax in the system for faster calculations. This way any 'simulation n' in \
the code would correspond to physical photon number of n(g_num/g)^2\\n\t\tng: \
Background charge of transmon. WARNING: This value should not be of the form \
k/2. Always use non-excat values such as 0.4999.\\n\t\ttmax: Maximum number \
of levels for the transmon. For typical parameters 9-10 is enough. WARNING: \
This value must be an integer.\\n\t\tnmax: Maximum number of levels for the \
resonator. WARNING: This value must be an integer.\\n\\n\t\tEigenvectors: A \
tmax*nmax by tmax*nmax matrix, including the eigenvectors. Each eigenvector \
is a column in this matrix, hence U|barebasis_element> = \
|eigenbasis_element>.\\n\t\tEigenenergies: A tmax*nmax list (column vector), \
including the eigenenergies.\\n\\n\tNAVIGATING THE RESULT\\n\t\tRefer to \
GetEigen[] and GetBare[] functions manuals to find your desired \
eigenstate/eigenenergy and compare it to the bare state/energy\\n\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6803788527353354`*^9},
 CellTags->"Info3680353652-2771209"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example:", "Section",
 CellChangeTimes->{{3.6802211434764214`*^9, 3.680221146356289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]q", "=", "5441"}], ";", 
  RowBox[{"\[Eta]", "=", "220"}], ";", 
  RowBox[{"\[Omega]r", "=", "6785"}], ";", 
  RowBox[{"g", "=", "90"}], ";", 
  RowBox[{"gnum", "=", "200"}], ";", 
  RowBox[{"ng", "=", 
   RowBox[{"-", "0.4999"}]}], ";", 
  RowBox[{"tmax", "=", "10"}], ";", 
  RowBox[{"nmax", "=", "300"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Veigen", ",", "Eeigen"}], "}"}], "=", 
   RowBox[{"Diagonalize", "[", 
    RowBox[{
    "\[Omega]q", ",", "\[Eta]", ",", "\[Omega]r", ",", "g", ",", "gnum", ",", 
     "ng", ",", "tmax", ",", "nmax"}], "]"}]}], ";"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MatrixPlot", "[", 
    RowBox[{"Veigen", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Eeigen", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.680221927954607*^9, 3.680221972456492*^9}, 
   3.680222021271551*^9, {3.680224406211708*^9, 3.680224406745716*^9}, {
   3.6803712456359377`*^9, 3.6803712775240173`*^9}, {3.680371309002879*^9, 
   3.6803713102735558`*^9}, {3.680371344113666*^9, 3.680371348641621*^9}, 
   3.680373388039894*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[RasterBox[CompressedData["
1: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
EKlO/TatfDQPePtYSM2H/hw1N7Yy9qf46D46/xvZtpPE7cI3rfEOFPp28to2
yhN4F2Bo2cskoX46NyO/lP5cUTWN0brTnINS0WEfooiP3yU2S/r8SYzcPzv/
KsmDY3nFgIIKibM+4clPzekfr+5H5QR7CxL6fzxXV1ZwUWYREblhVjeSsw6N
y5xAwfGI58fAnQQ2x1deUoylf/1tsOGnm3orgfKidZzQB2xs7Erb5K7YjFOf
RqQfvSXhdchd6JUDH2obQ/8c0qb/vnOf+2VIcheBiY0V4n76fXj9VLfV4FUl
toWc2/D+7Oi8Fcm9f9edB/P31u6N5fTnigdNSi+k3vFx1DJY4fNkBo6dUeE9
r3iKmf4TftyMIlG/xuLMYDQPyVXTi9xk6M/J55W6polNIvBKf8Dvg30Pvjz7
I31o/wm4tkYezR/lKJ3dswf7z/HxGofv6d6k//cs/aZ6plNzDQxXR5gsf96O
utm7VgQm058rKOOKTO8zFNrfRW5euJqCb+3OMH4oH/GJsrumhVNYExDksn47
hT9TQkVqC+gf7y6HszGezhQYw+1bl7eSSNgU/7rgDg8fZ/RljHhT0GxuZm36
TSJfOcArZjz94w33mDbHfyWBXv3v3j85JJbprLmo8JqC0vu+SXHvCJyjKrXK
N1PYomz8mvpBf6744X7b+s0GHiTbnunfqyXQn3bX/fsCCstMLvxaUMbHfdl1
DKcMEqHffn54dZv+8R5+bTH7aCGJ49pGB7+Dj8Hs1aGBPQzMO7cncv1CCtKF
Dev25xBYc8/B6Hk6/fvfYpXUbZnjSWTeOvPDwYKDac/fGszsa8WGjuhk2U8k
WDvELVcLEtBasLXxEZv+9bcRtXYj+QsE5sUZ+Cw0YWGRQaVgFu8DBGdFe8un
k1iYPqPkxR8ezESr8mrVGWPu92/V/I6XogjFxxPpkMoFKQyonOq4YeFRCFPv
TOnvV0gwu81LeGk8rBdoUK/aT3+Oqhvn2SDF5CNZYXFVZGgPnlr7nXFe5Qdj
K9bzCfUkvNlRvlcv8yGV+MSlOof+HFVydJ4Ma2otVIZMtT012xH+du+znTn0
32cD809Il16iIGM9ePXK/861pNtkXv3hI2Wj29K1o/9/zjR+/wkrCldsqMHt
P+gf7+LzW1lpwRSiNX74RclR0Ik/vsLtKB9KxbOtzU5TYH8+toe1nMJJFz0z
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
7V3wjfrzM1Oy5qVvVObBjZy9MmoziSsTZ9oX7Ofj46PDp9UHaHBfrWU1dL4b
94baaHcnUD/vfD3TNCd7NYmIaNvoum0cnL2+q1C9sg1Cv9zs6peReLnYNn6K
IQ0aZv4XdIcDxp3vWNHm04+m4btMdCVsWZEsxUFHdBV3YjcPs97M89nt1ICZ
eYr3LA2Z+JHZK5s1h/o6amRm0tYVsVw0MiNHPH8RUHm1b3BIhw+hF8vPnsti
YlvAy/S2uRzkZ89T4vCoH89hrl8Db34icLX2voFXQDd6arb8zrRphPMcRzxJ
ItH0Xnj46FsuchOz93Zeon4dlCVUyfwoT0DoZtbHWH8WXMy9ZFYJlMBzi/OZ
tMUkRC3Vj20W4kAgPm9I/jz1+1yq52bwPkqQmD33h11/MhvPS1/MSB5owZ/i
SdwNc0n0RPpbL6tlgxUiq7oon/o6anin6JzJdB7m8yMrFfczIRTySbPi2yuc
N7e7ZXiOhMy31L9ml7iYnVQ4PWYB9eN569OpnR9H6x3hFfYa2MvFOpX0deqP
6ZCwzv/ebsNHR4zAjSU+JObmCjbWnqb+XM2MI+2GP4/WQjqs4351Ax0LNGI7
4uOpn3fUbF9Mk3vKwXr2nCvnIwjIxKywcOWTMNv/V0Vc4wtufEzX7pXthKT2
y2qhWOr7kVVnIWVlQKI1y/WClAMH6e9d2sjmNtBLzt6brk+i3CtzkLmCBrG/
Q3+d06mvox7uqnh31JiFrPPKhQ7+HKibOe0mR/PQ4eI9p1xEGhGLLzMPJDLh
GpheYziB+vHMqovPeN3ORYrZ59B3S0is2KH9KGcrH/11lYt9MlkYFpFdSz7h
wMvtMzt6LfXfid+5cvNHezeBg2dmvU9id8PSY8X5iAXNEJ3xbcadIhJ+kXM3
c6x5eG/U7DIgTP0+iObfrGvPQSBLcHaZ+rROTKnhnO7LrMA+Ri49yZREtGY6
RyiCA++fZET83fZx5ztWdN97990hzzqkLtlVk7iRAVkV/sfH+7igXTY7x71N
R/+TXwIifd3wbPRS2apP/brA7JTazKMXa1FzU9drC52OI/mre5inufBZYrc/
PIGFE4Lbxd9c5yA3xYExbxX1/79Kvjesox8RyKat+WvT2oXbgsxTJlPqUXqw
+G6kCR/G8pKta9aROCX6JG7xHOrn36eujGLDq3X4Y7Ps76ALA95xCsU6u6mf
d+QNvKvuu7Bx7nW7i1QxDyprR/7sDCex26KhOMitEcwoes2sN0zIERXb0r5T
348zlz+0SFtP4vqxcyc7D3Ag73199s197Vi+dMkW5fkk9M0ShO+Y02AV5FUk
a0H9vl62T9WNALFO/Oy5tf44gwNX2/vc9y4Evk18sOxBVSMad5+ImtbPxJcM
2ssKOvX9Wzjz2+QUBx4MSu9tS/Mn8UHzmcTDMD6yhgOU7IS6cC5D+2ORHxd7
l5i6vMim/jm8ztMiZb8giQX+MgNSrmwUi5XUO/79gptxDREBnaP1UM/CHP0m
HnZ73L7R40X9udwgyeAMc38CLQOXDqa3deLEtJd5r+Wr8S7hOD3Dm4SL3hIZ
QowLLZULecLl1J+r11cIPTLdsh5P1tdEjeQyRnXxqqClplw0TrqxPmMJAw+f
56TzjNj4vbAuIsmT+jpKMdLB/G56DfID5P22+NPxxi1/R+dTLnRf5y3/zWei
ey1922QjDoxC06y1J1D//8sdOLsgei4BcY3D358fYCFSNb1PTq4EMXsNLh2Q
4mPSoZKSu3EEZGqN6j6to35fb9J9gwvqXxuwrHaPtnMoE/o8hUW8qdTXURe/
rmgcud6NzqmK83ds4WHTo0DjwdWj+edNaPZh/Tr0Km6pEl/JgMmyWR7N/tS3
N/PtaZc19iR8q8+xaAUcrGfIfT/C7cCW/U8rq2sIZETLTvK9RsOfrGjX68bU
f6/HrYvhPQzvgmVbxLO7WVyoPJl1/lArAc3KhHXKhU2YcSfiRpknCyI1KQJX
8qmvo5aoHs5syeeB7byQsEkbjWP7RqMtyXxMie7G8hPdcH8S6hNkyoPQ9bOb
rbWov29HwqAt+tReEh2q3gGpPzlQhOTgiTM05DueW6IgyAe5+s4Fpw0E4nye
CV+Pp/57H+1hH72JmQRa18u4PhvsQtzE4G1th+pRkGEiYXOFhDg6/P9kcNE+
eKl2wn7q932kJTx+BQk2IrtA+rX0OSaOrr9y8o4AF7zcGq7TUiaST51VmFjL
xoumlLD6QurrqFvOG9dcvVYDm31qIgIedIhpZxe0ZXJx+cEXoc0XmQgscjyu
JcLBNMYlCy869e0Nz/qZ2pvOw9yQZW478+lIWOMTNTXhKN5lZrVJ9pDwVM/K
vPWLhxP81xZXKqhfB23K97toev0rFjre0Eor74QHM96uvZf6eSd08Ee3V/Lo
eaRtTltUwoXbPn7C4W4CTal9fud8qiG3QOarUj0NLw3ry9P+A++I9Wp19v46
QiJx4cKQXmMuTJ+9iz2zlQ4FN/fXnwd5EPgbPmFCAB2ny6RNzzwOGXe+Y8Vj
23vSInu7kVlLu5MVxYP158bSLAcShXFaWQLDzTAb3nR5r2AnItKsz2w+Q/14
Fg/Zb9m8nYDKiZHGWxP5yD9J3tpTz0dv6c2Y1NtsTHDkKtZ385Bd/mu1ViL1
ddRyjcIbE7tI1NZtFt31hYcBp0Xdx/07YSxyd6h9ER8qpe1TDGsJGH+feK/p
J/Xr2etvH79VHiHg1YSJWMvG7q+T5OZFfkGYx59pH9tIyDy8orH59ahO1pun
XziP+nnn57qAI/O9mtHtc7l5MJ8FxRfB3sW3Ofj+9HYtrZWF8i2tnNBSDkof
68Uq2FD/fmbLSga/UqsOeQ6zky00GIilPd/1OoCLor4Qj5EuJvrM3NZFrOZA
b47i7Ojf1NdRJc4eTwbWk/CJin83TZWGY/Zb7dR8AlBh3Dc3+z2JgHcJt6J2
8JBy8KyrymLq9+WnKfV3ztlLwHL7hAcqmZ2QPt+eueTr53HnNVbcZlSa+cm+
C2SzQGD6DS6ma1ZXeFQRqDSd+O5hXyXMdM/PXqJAg05wKv+eHPXjljSZl9pU
QmKh07x1Nbt4kJcobNymxcI2y2CZfa082JVGBw/aMdGvq73mYXbuuPMdK3qE
box2JzkImbR4hsNdAmGqH3/dFeTjm3tKbuabNizddL2y160LaxsMOxdYUV8n
r+ni7izaQCK78GV5TAwf+/1/pA8r98BpZe/JWW5cDKve/tbWSeDC7oPhS5dQ
f991TL/fN2sbPmSNGPoz9pOQ7129fls0B5v+FmG3Ax9LeRXGCbEkjif8uPeo
nvo6eWq8XlB/L4mfiXNiX08kQHDXtM5q7USUeVJUmjIf1uLzE+3eEVg0/9uB
kM/U142AjExbJg2Wlb937djfjR3ZcrRnHC52lQa2GsqxMeP4NebGJB4cHlWX
vdxL/bpgr/iXwECLZrSsZbzue8JC3431SXEP/nd++Qn7XOyE+TQ4pC/jol5q
Rob/WerrRs4CIavTiQT+3DO7ZNlIg+NlxiuZj4fw7nxAcU46icXV7wy/TODh
Xoabps0a6r9PnFiXvvvtIT6Srt45dLa3DZIRXpu6U9zGnde/hctWvCNXmdRg
g4Hc76w1dIxsjPs95Q318+w/4Wx7B0+5+wRS8kU7k993of9j3wvptLpx5/Vv
YWGYc/iBI51Qr6jbHT+Pi3N2Ub9Eoql/Lv0T2uuKaRolEFg4YqRhqMiH0893
mNBFfR31/w3PiDqadXSM1jvdz2hz9jIhvm/KnNo7r8ad17+Fk9Lu9U2Wr4N4
X9EyNRUGykxWdVw59N89hx8M/Fy2+ymBQx+PBGiTXci4bqz4woz67+L/CS2Z
f79kXW5Az+Cetc3bmfjeHPfgmuR/17/Zj8UXin3iYav0Hp/AGUz0X+A77rPO
HndeY0Vvtw/RKsc4kC2dNe/KHgLGlrFi39pJnGjfs3H5YCPsuAGr6FNZOHih
d1HQV+rXs4ZZN7IcZ3dCzCpF6nQ3B9WrJze+cyNQ52feYIYGpAvE/hbVYCL8
EmO6gSL147n3iP6s8jQaup1yWyv2dkNT4sHXoS4uHKyirebb1GB9cVer8Ho6
TFI+K28poL69db+KbQdPkHBpe+z11IuL/t8TpF++oKPPsdDULZBAhR1LqKmr
E72LExTLjarHne9Yca594v6c1XwwAheqac0lwVTnNdW+ZoMo+1v8sYWE/rB7
65+nPJQqXq01m0j9Plc28fyp9yAPCx8L5h6pYeJkpl+UoMJb7JL8FnVtDomC
957z6j6wcTtV3dQgmfp7AKr/JMVV69RiLS3W5mA2HbI6QvIa10b/v18n1ocp
0GFo1rnx3cNurNgRbqUuRv1+gcL++LSZG0br2c2OkX6LO8HX/SaVlvEB7vcZ
3Oc0EoHb2lk2JTxUfuFF2RtQP54N/qzR3fqwEb8FVih+oDHh0Vv+hjeal27S
ojbF0Nh4PWlrs/N0AtIyc7y2pFH/vlFBV2XoxS0eZJdt/6i2kQFad5XSd6SM
O6+x4p9HPg/FLLjweB/wamMzgYh9PffllPkY9HwS/duuGbrRj42vP2chpozx
7M096uuos1IqFv23WGD5JawNvcsBq6xir+1qAqsinmytK6mDDRFFMwtioKhI
+P2cHdTXFZ+ubnj65yMNYeGXHyse6Ybq7YjJwd+5KDoY4u4cVwPDZM17p1zo
yJt3s5l8Tn17a/KTRsIukrChR56Mv81FjOspnwMmDBzYUnY7L5yAmfChR3Xy
XVi8snm/glTNuPMdK062T/1FGPFhHJHD4WqQ8NTltsvy2RhIpL2o5pKQO3XD
/BSPh7srGnblJ1M/70Sa1D5dKk7AsS5ls70eC11folZNsi5G02cJzq6FJIr6
p/G/DbHhNpNee86B+vujwoRutrC6edCwEfPQiGXC6UeOae6HPNxeW3R95A8N
4YXl+/oud2Na90mxa4LU11Hn9Br1fGYRmPLI82GPBQuep5bpmNOLwSi6+qrl
HQlV328fTm7lQeiRYthPaerPC8XVFIsu62tCXnvfzMJIFpbdWqprm82B/tLO
lq6NHEjumGzANyUw7UNncu4n6uuonnXVF6vv83A8d4trQDEdXzPL+H751N9n
3n7mYVR5EA9vTUtFTSNJpFgoRM6L4UMvmmf1/etXTOr8mqL7tRNls+ondv2i
vo66IxGkkrKPxCTxPXHbBbmY5Ts9oi+Nhi1TmiKjMnko0VRNcUliwKZtT1Tm
9kfjznesWJ9du6ZKmo7AKQfTve51Y36yQ+a16Ty0ZiTuufGrBuZuWpxfl+mY
o+E8MfEO9XVUkoCJAO6SyF1zYb10GxePdqlbWdAYGNZ+Y150jsCAYVTZ3f1d
CPgkc0fWonbc+Y4VfX3mvKzewMcChyPX+8xJ6KqqbqpZwQEtfCRZYpDE04d2
+jfmEtBu1cufoET993r6hLnqwcUEervMWMxUFm40fkxLzi7F7pJgh1BtEgur
mbOmGnBgLWyieMSpbdz5jhV1SjxNLRk8eLM0TZ1O0eEbUCX4R/8I9r9B11lJ
Eg3xVfeM77JRNPlMXKog9e/fOnvXr3ZqHNVJNbNkogyY6HcuFd476yXeVRQp
Pr5DQmNSXEh3CxcpfvlNN1uo/x6zg/Wk8evLFjQHRBx6HNMJxYL8CU0fOLiu
WeZ6Xo0LjxfmLkQJAWGDD3kaMtSfQyj0i1p+boAH7fKGfP0DdLxvQ1bzK+q/
58pNkrC1LiYwKd10x+M1fPQObRML+8lH2vbz4n32LGDnzgTHoxzEPNvlFKRM
/fmZeVlPNeodSXhkLA1PK+Mg3GvjomdiNFzX3vA6SJ3A8eAtk7NW03G669r9
xG3B4853rMhrzl6jd50O2qL7zVn8bijZ/r1RqMNDQbmo1Nv7tQiM2ffVmEtH
3AmhAOEY6usotoyl3+7Xo3rC/rlrtBYPc3ftzH1ZzMQb9UtrPe8Q8NyaUdqQ
24WDVZskc49Qf/7tDfusmtoWPhpXLolvPERiUPbQcefbHLiFzNM5OZEPSY+O
XQomo7qj8t6x9zHU11EX9F9u+jFqj9cyR8MzKp3Q2LQ7UD32A2IMYg+KWpEQ
jp+uv/sKB7NmiZjqKXWMO9+xYpKpFr2ycPT/GiASdOsRHdpL6gOXzz0K51eF
51fNJiGXkWt37yUb5hmNsRVbqK+jJmw3HeA2kyg9Kzu1K5WHTfp6UnU9LAjN
XEvLiCWhJLDn8PFQLowEFAdmdlL/O0fBJW/8PBwZ8OlWDS7ezoaHv838n0E8
KLb7uzyw4WHjktfmi7xJXDb5YDh8hPo66g+DM/v0MRbuetjLWlzgwDVoN0N2
BfV1xdaK1Istx7m4Idgxaf3P0Xr9in9bpDYfrx5H2yxd2YE1eYXS/E9d+Bp/
Lur0Gern2bUd0z45W5NY3j7LRiWFA1Xmt9/l1h1YGx7YdTuBwPWT7x4u/UrD
ug+/g3ZxD40737HiMdlrFcUbGQjtU/EgbNlooR8xeBHIw3f1zKepCXUIjRM9
+d6JgcyFesXxbtT3b/vNsuPvK0k8mP+ytDiMh1ybbvnVkSz8kPJsj80nIDph
s7n8km7s8XxbvsygYdz5jhWZuRUXq+35OPpqSrXnKRJendatklUcqD29kx0r
ycelZwYWt48T8JVUyl28kPrv147tvFgg6kkgMdq79P6rTuzauOekhEIV9M1M
3iqO5ht53Z2GVSJcrD/F4J95R/09nNxyh9cD53l4HanZ5CHBwLMvs4VqPlzA
pqDXQbcUR3VUgZVrKY0NXZmkk+d/UF9HcXTnfzrrXAvZDBO2Vxkd0eEipgsu
ciESMHHG7V0siJsJNT2L4OC9UFzJ9IXUz79Xpq6aMNG0A7O0R2qMarvwLsd/
R3Y8FysU3JWS5pBgeD5ZnujHx5eUFeILpXrGne9Y0SUg8u6tW7V45ZRnVtZF
xx/F3sWLYqmfd0r2XjhiOTj6P6xtIytlCNw1mLzCOpPEQJSNqxqnCdO8ryY3
hbGwUt2IT8uhfl/Pb9sPDWkLEoExMdH9CRwcCbhomvirHZFVCnYVZQQ2b8gN
dr9LQyzSDE6coP4ezmdRuns+GTMRj0qh2g42Kj8PVE0r42GY7Wz3J7UeUga8
yX87GRCuWD6xQYf68Zyu5/LNgEvCsiK1y4HDQ6gFrW/G9U542ja/ZDURWD1S
nZJ/pxuuzzuWZ0g2jTvfsWLBcjmNCzv5cLFYr734JomSoFf5D6ZyUSQsxopS
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
qZ93Vh02+Z6kxoPhuWN3HoyeTxpzano1ffnYlxOsK7uShUaTGZLRezn4rK67
S3o29e9Ro6uTtT/akojOVci0TOPA/KjKV++IDihvf5uV7E5g+/cedudkOjbd
VWg7OEL9PtcdyzOxiyQZcFXf6BimyQY5+8I0IRceHgX5y8yZXYci09z+ovkM
2Lje1HU6TP14NjA9n/76LInQx6VZZWe4UDjuW/tZhAH+rNiz8qM64/27DZKm
hZ3YqjXx2KF1VePOd6w4TY95XkmZCz/hTVW5RQQWniLOZErx4X6t4ofRYybu
GIUX5clyILpH0u8gh/o6KljHJCk0koSaUGFQXhofc36VGOfo9ODYRg0HFQsC
BwPOxxcOkZDo/455VdTPOwdcv7rLFPJgslO3b08tAycspfQG4p8hMi9gdpcm
ibYh3YEXGhycfNpm+2s59b8nuDvYc1teFAHFCG3hv100ZC4TiVq16jCMmn69
LnAiMd0iKetRLQfyHcu/Wy+hvo4qKrKwcd7VigrpnWY7J3ShaJ1E1aAEF7/z
rX5+HuRBs39vnNZHEua/W/8efk79eJ6oFyO2juDhQvMkt6AwOp429ree+EX9
7+tZG2zxTXDhYMKSEcGCLQQCIqcob6snUXtlhzCH04y/b2VCo3+x8CUwZ13D
Wer39arElq3s2kDCY+NDWU4UB3/rVlXw8tsRXZEsPamaQPvvZ090kmi4NfW0
p6QN9fdwGrvENDyaxMSN/p+/z+excUUgvyM8c1Q3yzwXurSiHrNmaOwQSmeg
aVabnJU59XVUnJfAW/EcEiasNmK/Ig/BFp+/+SUwkRczp/7WBQLCvhvnfDrQ
hcucwY3L91P/O8X67eVPywu5uH5buO25LImlbz7HDG/kIykqMXmdeieqp5qu
Cevn4Gknc+DgfurXQXN4gdeaRv37Pte/5l0pH3od687/MOuBnNHcHfxTBMR3
Zv+Vk+dj1hSXj6eZ1M87JwzspzT18fDi1TM13wImxM9cm5s04Q1qOp65plmQ
+BC39aXiBQ6y/ISz6FOov4fzsM1Rf/MsAq4+duzCXBqWeKYyj4kegpL5r7rV
o/XvYVoPUz2Vg1sF6dZeB6lv78Yubdm+vkYYnvoa9nkyC8rk93WKrRw0+p3N
kJjDRXhL5e3FBQROTn3B/SVJ/XjeKF1ZYfeQB9uyzzvXHhit3yuaNI287487
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
mqpEF+xU+YiP1gxET6qpFGvhgK+u5UDGuVZkx6ed2L7+3bj7HauGYfSZVS6J
+W5uXk+NOdAqqFniN78N4UFrToXHE9j+te/lUGYHriscfN4bWDHufseqlRvm
VqyezMbux5P2q78gIO5w5NLuGRT27C6df4HVgpUrdGPinrGQKuQ9POUx/cfv
DJG2KaH6FIpCA87eciChaHy3J/hWFzaLNCxtmUzh2M0s92m6BKItU9x/3qX/
/X5iAfJPZ7uS2K+2j309gULYk1QRdRUu5JYahZRqEpj7PXVbTB+J+z2Dck+K
6M9RRrrkstrrFMzLCm2+7qXQuNNmRLuWA9ELS+/ouFMQlpLk1M6lYKY1mn90
F/3zuegGX0bkbQr7/xTOlgii8GnupA6WGwHZXoXh5GgeP5kZ7jDwoFD7gXLz
NaY/RynOGz6rMUQgcIPDz+12DFwJ+GzPp0n/82tXZSoExJ62o6J6WNJlPRsb
t5aMzAgncGn3/cPbMr6hUHxKksjhZtzNyp20YCP98/bhsYHZ961a8X69UsSn
PhbsZUNPSVRykF/5a0HM51IsWTvkpzSRiQ9xYXm65fTnqIfrXk2P9iFBaE97
L2TNxmefybktGUysKxdPFpjPG5dFn5ga1m04mjnvCzrzxt3vWFX5xjWpXJLE
yVT+3if9HAhePq2QmtEOVkZNYFApgcx0vZvPvDpxUkONDAqjf9/1n9+r+e1+
s7F1ZtXQDQ0Sam0FuS+O8tabSV8En+i1gy0WLc7lZ2NTw9k1fOfpPw975N+d
nMKLb6fPwlqLOBImXZ8/pYqxIdz44N7EpRR6vD5sVv5KYOYenybvdvrfa5Fh
G1XE+EqicPtE73UVFJQFmf5H9Li491XrTHUZAbUVgmHMbRTOew4eOfqb/hwl
Nhi85394os/Fac2WAxQco0v191AcBJTE35viw+NIMf+TGsoULDzOXbAIoP96
5FF7aLj8LoWp+x8ke0dSeOLqElVzk8BjrRnzLsby6qH41sxGfwqs0ANne+zo
P37P8Tk7TygmcfTbn/WVG5sheytuTv+Q1bj7GqtqV0h9in/Zju2j5hbZm9jo
/bmhKyKSQI9cQubHom+YmeIo2PJfM+JIpeWTNemft4K+3SnXI9swc/1w3p67
XXj1KDK+Uo3A4GXn1L2S5QjIvLmQ7yETOya3L/9ym/4c5S7Kr34xm0TIs0NW
Abs5aOwvuRMz2opl5nmho/sJzFIQvnLOoR29ZUy73L6icfc7Vp11yujpgCiF
mp2m6pcuEygzdJeLWtQJT/uBJ/9TBwkkpbAINRbeOcsvPXW8btz9jlXT6qVf
ufETYCf/jvWoIGE9M2bXqbcUTHzcutPEWFjRVvNyWiQHC1ckuCudpP+5eK9d
dyNJOx5PSHzNlWCTECo+kZ9RwoZm2bm5xZoUQjad21a0gYSLOlFxWoD+36kH
TlW9SFxB4RO7v69oGhdHmUf919pyoebeki8aQmJX24GEwZcUajUbdG5p0P8+
JSkXV4ZxBAX9xe4eiQ4UZuTeWHpHhYC11+sX/Td4nPhdfNVUQwp1Ikzt3a30
X48mLh6M6b5HYcm15uF3tyj8aV7TU3ybwDLD0ZVaPL7a8XTDDItwCpNyb3Qf
vkF/jvqZmdiz5zWFgtDF5G77RtRXpE3sdqb/PZwxE5oN3Ew70Ci16nB4HBs/
197O0i8nsM7qy6mTd77hoW+luuj9ZjDYWzZYKtM/b5tee5RHb+iEm9+MrbYL
ONh5Q8GTlCJxuvFbeHRVJdb+ilul/7sFyYt2D6Qp0Z+jyo7ldR2eRmFx0sPE
FYcJeHStLF2Q04GRQZV4i9cE9krpGFAzOtGwfN+rgI/0f2/OrvXBvf946+ms
qtjQK+okNly6GHFhchc8zb+n+F0gsVxA0ejFBjbE63qKXDWY4+53rOo3jdE7
fS+JnUeUsx5epyCrHDzFeikXltmO347as6E6peuSF0Wg1izOZK8S/fcr4gf3
3Zf1pbDKRF/WSZVCS8GfsBMRHEgEMcK2naBQlXabmZpCwj42lfEc9B+/r62V
DfLvULDoTZCz1uYiJHBpwNpILnwmtybWilPIDDc3dP5NgbxqaNNsQX+OKnX2
u76UF2/jufAPSiEUumsPRJ/0IjC0w4KvkMcTa7LwOJjH0bomxb9klOjPFVt0
y9YJ36dgc/Luxh88bop+9lAh/zGBVfs7LS7HUegvao2pvk1hiH9OgHY8/eP9
P8q8KP58B7P+f///f/7G39f/bbV88eeLSmkZ7l+PWZ7pyYSN5OGhA//AOdO/
Kcd5NM27ug5bR/wNhne2403chy9/HtC/nv2b2hrKb1e2JKH4ky/LawobXhbF
RUHJ9O+7/pvKdX58oylHwUXl5tbbeQSm2acJn6qk/3efv+nELOXj1iMEnps4
dUgc4/FVum3tgRn0X2f/plNmRd075kehetnTGx2bKPzgSsYeTKR/3fdXnZOR
5vWKgrR3p9UbYy6CrHLTPO/8u7+v4IDpl+P3KFgbfdG/G01hbsuCjQZR/w5X
/P+u/wvepfMy
     "], {{0, 0}, {100, 100}}, {0, 1}],
    Frame->True,
    FrameLabel->{None, None},
    FrameTicks->{{{{99.98333333333333, 
         FormBox["1", TraditionalForm]}, {66.68333333333334, 
         FormBox["1000", TraditionalForm]}, {33.35, 
         FormBox["2000", TraditionalForm]}, {0.016666666666666666`, 
         FormBox["3000", TraditionalForm]}}, {{99.98333333333333, 
         FormBox["1", TraditionalForm]}, {66.68333333333334, 
         FormBox["1000", TraditionalForm]}, {33.35, 
         FormBox["2000", TraditionalForm]}, {0.016666666666666666`, 
         FormBox["3000", TraditionalForm]}}}, {{{0.016666666666666666`, 
         FormBox["1", TraditionalForm]}, {33.31666666666666, 
         FormBox["1000", TraditionalForm]}, {66.65, 
         FormBox["2000", TraditionalForm]}, {99.98333333333333, 
         FormBox["3000", TraditionalForm]}}, {{0.016666666666666666`, 
         FormBox["1", TraditionalForm]}, {33.31666666666666, 
         FormBox["1000", TraditionalForm]}, {66.65, 
         FormBox["2000", TraditionalForm]}, {99.98333333333333, 
         FormBox["3000", TraditionalForm]}}}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    Method->{
     "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.006944444444444445], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
rEi9qSYZ63ZcDxi3ktyQDHOVfQ7a4eSmZPA7HC3mXya3St/P9my9FS3kzmRs
Vpk0ZvNEtv+XgiyNZ117rMiyKUi9cfVFQAJZLgXOu+5diS8iK6YAr3qL0zvI
qilYPsnW4+RU6k9aKVi67/GKq9vIuinQ1Ns+qUJANkzBFqW+XbV32b5gCiIG
Xq789IdsnoLiMT4Hu2axeaoU7OAZ7xvoRLZOQWbHQKOxB9l8VQr+tD8fMOUJ
2TEFBm5ZjwxlqTe5pUDg45Jmbkz2S8F3s2nbrD3Y/FUKdpo1qjlmk2NT0CCb
0uhbz+axUiBvqZ0Vw/YDJSkwlrm8Xcz2AzNT8ElDVyWb7QfmpODnL8GzS2w/
MC8FppXvksrYfmBBCt6ojjN9psT2AVNwSDj35/vV5PIUzGgxzu6IJFelYOUA
Tat+bD+wJgWJn370HsX2AxtSsDr/6Bl1th/YlIKm4wZW+pvIrSk4o3KixzSZ
3JkCFd7vzHUlbH+QizcCPdMdneS+XNQ/W/rOYxr1J1kuUsYbh4Xbk4dw0bFi
hEqqmCzHRd+Ndy4driQrcHF1le2qc72oNylyMcX60bui2WRl6Z/P1fCtcmbz
VVzcOWQr25BJVueilesp/vaUrMXF+k5n9b+DqDfpcLF325Kzw0DW5eLK9j6G
473J+lz8OnX0xrSTZEOu9P9PNU2NX5ONuBCM5922UGD9iYvAtteLbZeRzbiI
tRtV6hzCehQXdTv1EHiBbCH98wMNr8Y3kS25iLfT1EtXof60Xvr8xF45J9ay
XsXFjcI7467EkG25CJkSmFReyPoVF+MUVX4/byM7cNH9PHfPRw3qT45c1BbP
fPZzM9mFCwOj7AX9eaxvcVGQJ5c9qozsxcVYkeuQyd2sd3Ghf/HtHCVF6kVB
0s+3Nq7psB6bv+JCTWa6ZMpKciQXlt8fLjm3mxzLRXKIW7thODmRi94+coeL
9rN5LenrP5NnYX6ZLOBiVveaXw8fsV4m/fnzOjI3tpD3cyFZkrHsdX8238RF
xl+ztl0TyVnSz3fJD/HX+eQcLnL+HDf2sSKf5iJq6Pa3v93IeVwssVGLjkog
53Mh86BZa+hxcgEX/dfdqBAUkQu52Pk03Vm5ju0HcrFpUfjgrA5yKRcWsd4n
teWoF5VzUS3yNr8wlVzJxa6tEe/nLWbzVlysqToUVryNXM1F6qt7yssDyDVc
/AyUvfxIQK6Xvp8MK8tNZ9l8lvT+mZebGu6SG7lo1tXmODaSm6S/P8kXRrf+
IbdIP88Fa077jqVe1MrFodn9Fv6dRW7nIt+pqjp6FbmTi+jKC7uHOZF7uAhe
l9cljGD7fzz4fS+LVzlI7suDwoFOpWMFZFkeIpYsOanzhDyEh8Q3eYb5X8hy
PLjZzS2bL0u9SIGHR/kNa0vUyIo8HHuY/Wq5MVmZB6PDKU6PN7L5Kunzxqb9
2ORBVufh/eTbQW8SyVo8WF1U6OeUTdbhwTc/NrH1FpvH4mHQcLWRfvVkfR7+
nn0j+fuTbMjD8LBylRh56kVGPLTteX54mA7rTzwobhg+WbSEbMbDq8nu2Srb
WY/iYWXxb61jgWQLHoyHXTqhI2J9iof+LelT8vPI63l4ZnQmZ/491qt48Gz4
olHynmzLw8SLW7KWy7B9Ph6Kxb9VHyuRHXgo3/Fg/yYD1rOkr/9H1Zg3q8ku
PPxQ6Z/quIf1LR6WXts3uDWS7MWDRebgSN9DrHfxkJL5svvPFXIQD7rJ7z2i
q1n/kn6fc9U/Df1GjuRBzz19q3Agm4fiYUPvZU+U1cmJPCws0F2aZcLmo3gI
t117VXsTWcBD96VcnQuebF6KhxdJSw7OSybv58HnmNLw4hw2P8WDd5F26LIS
chYPBw4FfK16Sc7hoVdv2S3WneTTPDzMqq54PYLNV/Gw1/TNnN3TyPk8JIin
Z31dyuateLhvfX24jz25kAdt4+SA30Fs/oqHi52HGyPF5FIeco27Vg45z+ax
eLAtFFziV5IreXCZ5D1+3Ec2nyX9fCZkRB3pRX2omoffNgNapiiTa3iYHXp1
zbnZ5Hoe1GddvGS4hu0D8vB2XKdSkTO5kYey+oiQpdHkJh5mjNn05kEmuUX6
z9MeP1Ora+RWHlq83ma9fEpu5+H2I3G/na1s3osH+XFpO1sGUS/q4eFP04dS
z8ls/y8VGY/CJnUvIPdNhaXTnrBwG7JsKo4tOvxqoDd5SComftWYz0th+4Kp
iPyvW6R4kqyQiqftqt8PlZIVUzHKUWSh+ZqsnIqol7bHc7vYfqH0/nqvvwYK
1IvUU6X///Bq4/XprCeloi4h46zZMrJOKp4vPNW/cgfrS6l4lThsy7oQsn4q
5jTfPv9CQjZMRUDtowH2F8hGqXB5rGf76T4Zqfi76tNZtyaymfR6WUfvzt6s
R6VCL9d6Q6gK2SIVnf4jsvsbsj6VijMZkzqT1pLXpyI7ItF81F7Wq6SvJ3Ol
ZH8M2TYVq7bu/jjpCOtXqfiu9cLgVCHZIRVBTscj9J6znpUKSUxl1ZU2sksq
tn+yUFk4hM03pUr//aDpVK5B9kqF64Ct+asXkv1S4Rbz7c+zzeSgVPAf15tv
9SFzUhG/RCP1PZccmYrUBZUvXE6xHib9vhUfqrXfJiemYuWUGXsCG1gfS8XO
ipa83t1kgfT9rZH9FTeKzUulQndEuJG8Lnm/9Pdjm02YZDmbn0qFXQLv9oSd
5KxUJDRqDswOZfNU0utXVCymp5NPp+KolWfyxXw2X5UK5wFTqowekvNTsWXU
AvnST2zeKhX6axwrcmWpTxWm4sKED3vztdn8VSqs60Ra3WvJpalY3+/HOFE1
nWdVnopWUeuALd50nlVlKjQ1ViSMSKDzrKqk3+/9MmXfunf/XJ2Kbb8jZ9Zr
03lWNalw2PmueGEQnWdVnwrTiPCK7EraD2yQfh4GahNjkmk/sDEVOcWTU6/O
pl7VlIoiSZDB11c0b9WSivOzfWTVYmg/sDUVe/U4slYzqFe1p+InZ/Ks+Oc0
b9WZiq1XhkbfCKX9wJ5U9Lbq+fNdk51nxYdC+8MMzSqat+rLRxUvzMbWj3qV
LB8VH3j7zbnUq4bwYSLfprTDgXqVHB/hCpzsYEPqVQp8yDi7LJQMoV6lyMea
V18/nm8gK/Phq7Ui/X4+9SpVPjaLH25siqVepc7H3LzqCX22UK/S4qOzurBN
ZSb1Kh0+vJt/VBr2o16lywen37e8dbVkfT4SB+kc2HeGepUhH9scZvLiwqhX
GfHBO5WUmLWBehX4OLnxefLNKdSrzKR2PS1+8ZtszscZ4/PHOx5Rv7LgY20f
4TW549SrLPlQPDfgmXYA9ar1fHAfvgmYpMl6FR8/J5kNnckj2/LhHj70iEk3
61d8PNo1aa7FTupTDnwUdO99vOkh61nS99vzfO/uudSnXPgoF60a7H2U7MaH
8qpbJ8OHUp/y4iPk9UQLri/Zj48bGg7fDrwhB/HR0ydEcGoFO8+KD4tFu+df
uUiOlH4+oWMbyyZQn4rlg6/ATa6OIyfyofnnzry3P8hcPjzu3Gz6toX6lED6
/rx8Jb/vkCV8BO9tXTZYj/rUfj5ynaf9VtxPzuTj8k698xr9qUdl8dEd3NdJ
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
rCglm6ch++lnm3tdZIs0rIt76lo5nfqTpfT9DLFLub+DvD4NBls9rjyQkK3T
8Kl/+5eH98m2abCdUKnzqDc7Tz0NievfeD+eQ3ZIg27L2LtPXMiOaTh5d7PG
08NkF+n790hMevaM7CZ9/yN4f54Ppt7klYbS0FX+tSD7pWHqwhO/X3iTg9Jw
KyUqof4kO789Dadt76i9ek2OTMPV9WtLXitQb4pNQ1bjwL1vlpET0/DE6NGE
dyFkbhrSNyTUNV4gC9Jw6btS5ocmsiQNy7Pt9zapUH/an4b9tWamn9ey863S
wC07OrElhpyVBvOo7bJfC8k5aXg0yO7Xtzby6TQ4Twv72qZB/SkvDW+zj3/5
sZmcn4b3yufbO7jkgjSsVorq03mbXJiGZcq9lP77j53PnoZt3AGGPTOoP5Wm
QVzjv+WPA7k8DaNWzY2XSSdXSj8vM80bvR+Sq9KQEJ0a1Ls39aHqNPzqjjsQ
ocz29dIw5/TnW33nkOvTEG167FPUGra/l4ZG95MKA1zIjWngt3xeFBtNbkrD
LNeNXgMPk1vSUF/YkBN/jZ1nlQarw74Ng5+R29Ng8n3IuKRWcmcaxnB51sMG
Uy/qScPu3T8lKZPZ/l86jrvr1MuB3DcdKy+pq6XasH3AdOStqNoz0ps8JB3m
1qqXBClsPzAdCiP79x19kqyQjm+lHuvFpWxfMB06dzdmK74mK6fDM/l4T1oX
2x9MxyWx5fpxCtSL1NORHrQ0d/90slY6eJ+DBo1fRtZJx7pjbx0PsfPYddNR
ELPnrmoIWT8d0yL76xxh57EbpkN4LIc76QLZKB3Hhpv+ymLnsSMdOX/vbNNo
Ipulo9/9KRXZ7Dx2c+nr+WQzewo7j90iHZy3K7NOsvPYLdOx1q5jpA47j319
Om5rmkWdYeexW6ejZ+y0zunsPHbbdEwyOOqSd5idj5UON0Ha25nsPHaHdAxx
72Nz4RnZMR1fJlY/1mfnsbtIn6/81+LSYHaeVDqutvuWz2HnsXul4+wWvcVX
QPZLx94paiXzNpOD0pG/bP6iQm92fno6zjx0LzbmkiPTcbHlf3o683CqvrD9
N0glRZokCV+VSghpMPSEJEmSNJhKpZJSpkwhJCSVVHLmc/Y+R5IkSZOiQpIi
FSFDkqQypUj89vt7n/X++bkOzt5rr7W2677u+153zR+lI8emwvjusUXwDDkh
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
KPURv5U8H2ZVSz33IX4rBT44dU71/0n8VlP5sDQmT8WL+K2m80Emsu9ZG/Fb
KfJhb+Fbz73Eb6XEh8+zXCY2E7+VMh8Gt1247kr8Vip8aF8Rvr6W+K1Umev3
m/9lK/FbqfPBLCcpoor4rTT48PpK8YxNxG81j/n8flnGS+K30uRDrShtlTXx
Wy3kw9CbXa+LiN9Kiw9jCoZczYnfSpsP1m9PfntE/Fa6fBh95J+/MfFb6fFB
9/PBoTzitzLgQ/Lx99FLid/KkA9ZAZbjs4nfajnzvEY9Oq1N/FYr+dC5dq3s
NeK3MubDDPfP8fOJ38qUD+928sZSxG8FfAi1ColUJX4rMz5UTg7/yz6AbMGH
2elZPjOJ38qSD3I909oucklfOx+eF+Y4KRC/lTUf3nxKepn4BtmGD3rTck0m
EL+VLR8sZDQyTo0j/ik+NHo2K0oRv5U9H9a96YuKMCF+Kj4sqvL4PrgV2ZEP
N7uXbQnyIf4qPoSned//lYC8gw/Xd09R9ZEQvxUfamI0o34UILvywU26Xf5E
HfFf8WH92DHLK38ju/PBZaHXSutpqEft4YMatdJnjCGyB/O8lUpar+xA3s+H
9KdTJiaeRPbkg71J6PvwHDw/0IsPl9rexqQv+PS/fJgPXiEaGbOD0G91hA/5
vh1VKSXot/Lhwz/T+OOzFDEf6MeH8viypEp91KsC+LDEb3xaai36rQL5QF29
XbA3Cv1WwXxIqKuk9BehXhXKzH8XfUWpN+i3CuPDKlFEy7tg9FtFML+fvarq
mjrqVZF8uM9+cyuyFP1W0Xz4rha2yckH/VYxzPzIcD2+VAn1qlg+dDXdiR63
C/WqeOb5JRS09BmgXpXAhwuLuM8/j0O9KpEPBofGzHlbh3yO2V/0zlc8zUL9
KokPAeF3y3OiUa9KZtbPxNdS9DbUqy4x4xf71/2iFulj50P/eb2akyNQr0pl
9oMow20BVchsPihMSKzwSEP9issHWzp82dZQ1Kv4fLD8N+H4WjvUq4R8KDJp
u7hMA/Uqig/TtwcGzP+DLObD1I3Pp8woQ/0qjQ/vA07vluajXpXOzOfXss6/
fIlexQf3ffq9n9aiXpXJh+KG+5O/TkR9KosPwTd+djYcQ87mgyjn74V3TUTP
4sOZa/t+l61HfSqX+bylf8aT28h5fNj3IKc7bw7qU/f4sOy/qujMOOQHzHow
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
pciHJbA/86rosgPpb5eAz1vb1ZGnVq3+fykuzEk=
        "]]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    Method->{},
    PlotRange->{{0., 3000.}, {0, 2.0712020367731424`*^6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.680221193757018*^9, 3.6802212329735518`*^9}, 
   3.6802220293380938`*^9, 3.6802228861421547`*^9, 3.6802241014176083`*^9, 
   3.680224414470572*^9, 3.6802246543523912`*^9, 3.680288077949277*^9, 
   3.680355057434862*^9, 3.680355919808239*^9, 3.680371300249785*^9, {
   3.6803713326580477`*^9, 3.680371356168642*^9}, 3.6803713878612823`*^9, 
   3.680373366534039*^9, 3.6803747478995647`*^9, 3.680377714983273*^9, 
   3.6803788720569277`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Synopsis", "Subchapter",
 CellChangeTimes->{{3.680221306614758*^9, 3.680221309493205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetBare"}]], "Input",
 CellChangeTimes->{{3.68022323775095*^9, 3.680223240250478*^9}}],

Cell[BoxData[
 StyleBox["\<\"{Barestate,Bareenergy}=GetBare[\[Omega]q,\[Eta],\[Omega]r,ng,\
tmax,nmax,q,n]\\n\tTakes System Parameters and gives the the bare \
state/energy that belongs to qubit state ''0 <= q <= tmax-1'' and resonator \
state ''0 <= n <= nmax-1''\\n\\n\t\t\[Omega]q: Qubit frequency.\\n\t\t\[Eta]: \
Qubit anharmonicity.\\n\t\t\[Omega]r: Resonator frequency.\\n\t\tng: \
Background charge of transmon. WARNING: This value should not be of the form \
k/2. Always use non-excat values such as 0.4999.\\n\t\ttmax: Maximum number \
of levels for the transmon. WARNING: This value must be an integer.\\n\t\t\
nmax: Maximum number of levels for the resonator. WARNING: This value must be \
an integer.\\n\t\tq: The qubit state that you want the eigenvalues for. This \
must be an integer in the range ''0 <= q <= tmax-1''.\\n\t\tn: The resonator \
state that you want the eigenvalues for. This must be an integer in the range \
''0 <= n <= nmax-1''.\\n\\n\t\tBarestate: The bare state belonging to qubit \
state q and resonator state n.\\n\t\tBareenergy: The bare energy belonging to \
qubit state q and resonator state n.\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6803788721466217`*^9},
 CellTags->"Info3680353672-2771209"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example:", "Section",
 CellChangeTimes->{{3.6802232587287683`*^9, 3.6802232605514107`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetBare", "[", 
    RowBox[{
    "\[Omega]q", ",", "\[Eta]", ",", "\[Omega]r", ",", "ng", ",", "tmax", ",",
      "nmax", ",", "2", ",", "3"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", 
  "ListLinePlot"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBare", "[", 
    RowBox[{
    "\[Omega]q", ",", "\[Eta]", ",", "\[Omega]r", ",", "ng", ",", "tmax", ",",
      "nmax", ",", "2", ",", "3"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", "Normal"}]}], "Input",
 CellChangeTimes->{{3.680222618858638*^9, 3.680222629730294*^9}, {
   3.680222678786886*^9, 3.6802226814241447`*^9}, 3.680222757032415*^9, {
   3.6803714242105618`*^9, 3.6803714386897697`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 3000.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.680222741609705*^9, 3.680222759001658*^9}, 
   3.680222833198454*^9, 3.680222890640444*^9, 3.6802230124113607`*^9, 
   3.680223062811378*^9, 3.68022410681707*^9, 3.680224665905815*^9, 
   3.680288106995434*^9, 3.680355064964912*^9, {3.6803714156928473`*^9, 
   3.6803714392158813`*^9}, 3.680374751720758*^9, 3.680377720240459*^9, 
   3.680378872238011*^9}],

Cell[BoxData["31017.`"], "Output",
 CellChangeTimes->{{3.680222741609705*^9, 3.680222759001658*^9}, 
   3.680222833198454*^9, 3.680222890640444*^9, 3.6802230124113607`*^9, 
   3.680223062811378*^9, 3.68022410681707*^9, 3.680224665905815*^9, 
   3.680288106995434*^9, 3.680355064964912*^9, {3.6803714156928473`*^9, 
   3.6803714392158813`*^9}, 3.680374751720758*^9, 3.680377720240459*^9, 
   3.6803788722841387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetEigen"}]], "Input",
 CellChangeTimes->{{3.677621635850624*^9, 3.6776216376160307`*^9}, {
  3.680221038089212*^9, 3.680221040925364*^9}}],

Cell[BoxData[
 StyleBox["\<\"{Eigenstate,Eigenenergy}=GetEigen[U,E,tmax,nmax,q,n]\\n\tTakes \
the ORDERED eigenstate and eigenenergies, and gives the the \
eigenenergy/eigenvector that belongs to qubit state ''0 <= q <= tmax-1'' and \
resonator state ''0 <= n <= nmax-1''\\n\\n\t\tU: Ordered matrix including all \
eigenvectors. Essentially output of Diagonalize.\\n\t\tE: Ordered list \
including all eigenvectors. Essentially output of Diagonalize.\\n\t\ttmax: \
Maximum number of levels for the transmon. WARNING: This value must be an \
integer.\\n\t\tnmax: Maximum number of levels for the resonator. WARNING: \
This value must be an integer.\\n\t\tq: The qubit state that you want the \
eigenvalues for. This must be an integer in the range ''0 <= q <= \
tmax-1''.\\n\t\tn: The resonator state that you want the eigenvalues for. \
This must be an integer in the range ''0 <= n <= nmax-1''.\\n\\n\t\t\
Eigenstate: The eigenstate belonging to qubit state q and resonator state \
n.\\n\t\tEigenenergy: The eigenenergy belonging to qubit state q and \
resonator state n.\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.680378872338285*^9},
 CellTags->"Info3680353672-2771209"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example:", "Section",
 CellChangeTimes->{{3.6802213166768427`*^9, 3.680221318292941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GetEigen", "[", 
    RowBox[{
    "Veigen", ",", "Eeigen", ",", "tmax", ",", "nmax", ",", "2", ",", "3"}], 
    "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", 
  "ListLinePlot"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetEigen", "[", 
    RowBox[{
    "Veigen", ",", "Eeigen", ",", "tmax", ",", "nmax", ",", "2", ",", "3"}], 
    "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", "Normal"}]}], "Input",
 CellChangeTimes->{{3.6774572354904413`*^9, 3.677457290839802*^9}, {
   3.6774573443051023`*^9, 3.677457414225868*^9}, {3.677457532784813*^9, 
   3.677457538748757*^9}, {3.677457655933495*^9, 3.67745765634179*^9}, {
   3.6774586587000523`*^9, 3.677458706603685*^9}, {3.6774587426855907`*^9, 
   3.677458751131466*^9}, {3.6774591203700123`*^9, 3.6774591285307417`*^9}, {
   3.677466768081428*^9, 3.677466769373393*^9}, {3.677467553157612*^9, 
   3.677467602262158*^9}, {3.677468543927198*^9, 3.67746854485493*^9}, {
   3.677468615593351*^9, 3.677468617030973*^9}, 3.677618899524043*^9, 
   3.677619274759698*^9, {3.6776216923828583`*^9, 3.677621698018578*^9}, {
   3.680218980855541*^9, 3.680218998387301*^9}, {3.680221323620928*^9, 
   3.6802213986551733`*^9}, {3.6802218030105762`*^9, 3.680221805398759*^9}, {
   3.680222039466506*^9, 3.6802220493257504`*^9}, {3.680371466730196*^9, 
   3.680371468861814*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 3000.}, {-0.8936013069207003, 0.3285016569236368}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6802213668206177`*^9, 3.680221399169033*^9}, {
   3.680222053176188*^9, 3.680222079579132*^9}, 3.680222841101297*^9, 
   3.680222894306223*^9, 3.6802232697221937`*^9, 3.680224452154819*^9, 
   3.680224670387183*^9, 3.680288110629548*^9, 3.680355067093732*^9, 
   3.680371470750332*^9, 3.680374753903276*^9, 3.6803777229913893`*^9, 
   3.680378872411809*^9}],

Cell[BoxData["31005.294981120613`"], "Output",
 CellChangeTimes->{{3.6802213668206177`*^9, 3.680221399169033*^9}, {
   3.680222053176188*^9, 3.680222079579132*^9}, 3.680222841101297*^9, 
   3.680222894306223*^9, 3.6802232697221937`*^9, 3.680224452154819*^9, 
   3.680224670387183*^9, 3.680288110629548*^9, 3.680355067093732*^9, 
   3.680371470750332*^9, 3.680374753903276*^9, 3.6803777229913893`*^9, 
   3.680378872416065*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing the Data", "Chapter",
 CellChangeTimes->{{3.680225804556978*^9, 3.680225810189351*^9}}],

Cell[CellGroupData[{

Cell["Synopsis", "Subchapter",
 CellChangeTimes->{{3.680223658246497*^9, 3.680223660437056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetFan"}]], "Input",
 CellChangeTimes->{{3.680223662636374*^9, 3.680223664836741*^9}}],

Cell[BoxData[
 StyleBox["\<\"{E0-vs-n,E1-vs-n,...Etmaxminus1-vs-n}=GetFan[E,tmax,nmax,\
\[Omega]r]\\n\tTakes the ORDERED eigenenergies, and gives the the fan diagram \
of the system. This means the parameters should be consistent with the ones \
used in Diagonalize[]\\n\\n\t\tE: Ordered list including all eigenvectors. \
Essentially output of Diagonalize.\\n\t\ttmax: Maximum number of levels for \
the transmon. WARNING: This value must be an integer.\\n\t\tnmax: Maximum \
number of levels for the resonator. WARNING: This value must be an \
integer.\\n\t\t\[Omega]r: Resonator frequency.\\n\\n\t\tEq-vs-n: Energy in \
the fan diagram versus (simulation) photon number n for qubit q. To convert \
to physical n, multiply simulation n by (g_num/g)^2\\n\"\>", "MSG"]], "Print",\
 "PrintUsage",
 CellChangeTimes->{3.6803788724966393`*^9},
 CellTags->"Info3680353672-2771209"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example:", "Section",
 CellChangeTimes->{{3.6802236688677692`*^9, 3.680223674564602*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fan", "=", 
   RowBox[{"GetFan", "[", 
    RowBox[{"Eeigen", ",", "tmax", ",", "nmax", ",", "\[Omega]r"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nc", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]r", "-", "\[Omega]q"}], ")"}], "/", "g"}], ")"}], 
     "2"], "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"fan", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Simulation n\>\"", ",", "\"\<E\>\""}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", "13"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"fan", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "\[Transpose]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"gnum", "/", "g"}], ")"}], "2"]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"fan", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "\[Transpose]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[Transpose]"}], "&"}],
         "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "fan", "]"}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Physical n\>\"", ",", "\"\<E\>\""}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", "13"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"fan", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "\[Transpose]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"gnum", "/", "g"}], ")"}], "2"], "/", "nc"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"fan", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "\[Transpose]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[Transpose]"}], "&"}],
         "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "fan", "]"}], "]"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Physical n/\!\(\*SubscriptBox[\(n\), \(c\)]\)\>\"", ",", 
          "\"\<E\>\""}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", "13"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.680223677610797*^9, 3.680223702045513*^9}, {
  3.68022473396064*^9, 3.680224740759881*^9}, {3.680224875975684*^9, 
  3.680224884980104*^9}, {3.680225560679296*^9, 3.680225609102448*^9}, {
  3.680225667502903*^9, 3.680225697579177*^9}, {3.680225732316305*^9, 
  3.6802257582532*^9}, {3.6802882200086613`*^9, 3.680288222335978*^9}, {
  3.6802986142649937`*^9, 3.6802986499136343`*^9}, {3.6802987336982203`*^9, 
  3.680298746193701*^9}, {3.680298838045534*^9, 3.6802988484753523`*^9}, {
  3.680357770626821*^9, 3.680357790338941*^9}, {3.680372159821436*^9, 
  3.680372176202483*^9}, {3.680373189619375*^9, 3.680373260639904*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
RX91LuLjh+MdHI73LpL/A8JkCyo=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
gkYNgA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
2Q==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
4XVDoj49P/qNQ8HbvqPinymot/Y=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw11Hs41vcfx/EPs4qEik0HkWEddBQpyrtshDmXczmVIucsqdQ3yYq0ZlPT
NHcK60xXTTrortVSrprSJsbPnRKdho0sVtfvvWvfV/90Pa73/fL0ua66J0Yk
+KxSF0KYqQnx79///dGj8udWe8sqLij/sz7RkQWqnNOwIdXcLS1ZexIeT0v2
3RrjfBw2oWEGD9dNOAqbkurBk86eUtiMOttfHL96BLag8uLmV7nF8CSSfj3c
4qeAp5BIsflh/PewJam+KdzQ+h08nWY2/pNaVADPJEV32Z2Q/fAsMokxK/ow
H55NqqL5enV5sBUpq4Vj1l54DonHT/3n74GtSWnxU9zLHNiG6GHLocJd8FxS
JrzVdfsCtiWhSL7fnwnPI5W1mfrhDHg+mfQc+PEzCbYjhf6IIX3psD2p/o5+
v3ATvIBE+KqaRWnwQgr7KiP86XrYgYSXcduuFJhIOrUlyDJZtkRkklLfeCcB
90WkynWNj4/DfREptQzMddbivpidrHVyDe6LKcz1/GS3KNwdSZkfmtsZibsj
iRZNhx3huH9CYvxu54mhuH9Cknr/qUshuH9Kysiizf5BuLPdLCp7/HF3IjFq
28qcZbg7kbJNZJv54u5MwiPI8rIX7uy0E57LPHBfQpLJzv6XbrizvV5bZLrg
7kJCbatqrDPu7LgZFhWf4O5KynGKN06LcXcl+n0guNkBdzei9cIjaQHubiR9
pFP3vh3un5HysWlbgS3ubMWT7dNscHcnSb/krNIKd3eivKh1vrNw9yDapqpu
n467B4nu7fmplrh7kjiytW/YFNw9SfK83lzwMe5eJAUOc5liLpu8SNytnXvB
FJ9n1wWXupjIVvLnrX776qER9t4kfrTsjxqHvTdJ7pPqew2xZ0+LNc34AHtv
UlZseKSjj70PKe1PaX83EnsfonZPhYUu9nwfkfVthTb2fO8M67HTwt6XpKtN
pTeGYs9e1nTW433sfYk0rD9sUMfel8Tt8lsrBPZL+fNDatrfVsn7pSRUbSNi
B2VLfB98tq/nb9lKvntVrlj/WrZYRsJRFTbwF/bLSCro+za9B3u+12Sqiy7s
2fljCra9xN6PJF+HAPXn2LNtMuwyOrD3I1GYuFCtHXu+TywM2dqGvT9Jlw58
9U8r9uz2oY0bWrD3J7Ftx/TeJuz5fv9SbvxD7ANISg79s+NX7ANI6E4KCKvH
nu8+v19oqMOe74VLPvC4i30giXLXqJ9qsWfH15TOvYU9O+lc/bGfsWcfHvVs
/HXsg0h68Udb7lXs2emrL7+txp6d90NK7CXsg0iceaXRVIV9MAm3jBinSuzZ
f109VHEW+2CSWg3Lxp3Bnu+2GqmZp7EPIbF6lM7LE9iHkLTm8RqfY9izDSdn
VpZhzw4pCxlXgv1yEpvmdKUXY8+eXmXbWoQ9W8yycTiIPTvg2JODB7BfQeKg
06LB/divIGnjfBf/fOzZl++8qcjDnn072Gv4XuxDSUT7ukbmYs/utGmvysY+
lP+/Fk7Q3Yk9u9eyN2IH9mEkRZVGnsuQbcLObowZIuHnsfWOD/VLlx0Wxr//
aNsjG/Hz+Z41YaA7VbaC70tfutl/jh7fjcunZiXLVrHbyvffTUA/nCRTlz0G
ceiH8/fP0xHBMejznYYbFK1Gn23tVvxoJfr8+T0eZ00j0Of7qjqXiFD02Xe+
D1eEoM+f//3AQHMg+hEkxZwfbeiPfgSJse+Oey9Fn+9mO67t8kaf70ZpfkoP
9Pmubri6zw19tv6Zvya5oM9OPzoY5IQ+OzJ5S44j+pEkTuVtukDoR5LUcOjP
jgXo8711yePRdujz/d0i94W26PN9T8DM1dbos9vW7N4zG332+LDwszPQZ/fY
nX5oif5K/n7QWj84GX32yufnxn+MPvudZoK9Gfrs2rJDQRPRZ/8z0iN1Avrs
T0tT8sahz752z+CEIfrsg3qzrxugv4rEmD9uNY1Cn71Y439duuizLw7GvzcC
ffa6nHQDLfTZVzZoWQxFn9277wNrDfTZo28WL1ZDn93Tf9rj3Xm5H0WixNwh
cFC2Cbsy0Dvib9nE3n2sI7pPdhj7qN17iX/KltgP7EtSumQr2Eee3019KVvJ
rsvdlvZMtopttak67Sn6q0n4jP5iw2P02cXXmj9Xoc/uF1eTWtBnB3lbxzah
z9ZebLeqAX22ReyDkAfos1PXqfveQ5/96ZCbznfRX0PCvOUju1r02c0Xxk6r
QZ9tFHvS6Ab6bJubLdrX0GfPP3FyoBp99lIN446L6LM1r1ndP48++6Lq1cVz
6EeTuLfS88gZ9NmdQUE5p9FnRz/USzqBPvvyQMqyo+iz4zt22paiz35R6zH2
MPpsz5aagSL02aYBbxoL0Y8hESi1VRagzxaHsr7Zhz57unZnwtfos0+N1XTd
iz67a+pL01z02X0lXw/sQp9d16t2Lwt9tip7Xul29NeScFbZb5TQZxuu03FP
R5/95OfyCRvRZ1ettOhajz77eVNS9Tr02W2X8ncnos9+UfxNYBz6bJ8pSeYx
6MeSqO+d1h2FPvv4D3eqItFnZ3X7ZIShzzbZpHRZjj7badBQLwh9tuLj0F/9
0GdnX8gv8EWf3Zd0JcQL/TgSC3RbJ7ijz9b17291QZ89b+RwhRP67OhhRqGO
6LOXa800IvTZsR1OTfbos9OSV+6bhz77tZTjbYN+PIlvn1cPt0KfPWWX2o0Z
6LOrbf3SLdFnGzRcmTMZfXaP46IX5uizvwxrUZiiz27W3b/MGH32VJskzfHo
J5DQq4q/ZIg+O3prXrwB+uw3ia3Go9Bnl60PqNNBn228UUjD0Wf/uKpp+jD0
2Vlmz5o10GerFc/IVkM/kb8fb5fbvKv8z3rs1zsT2gZkm7DH1sbn9sueyX62
uWJur2xiP82e/6hbthd77SPt7Feyw9ilsVNnP5edyPYxLGh8Klv6t/dLgPRY
9l522pY4C5VsBXuaTlNts+xy9vU1hxIbZSvZY1J/1v9Ndh171sTPzt+XrWJP
8rAO/kV2N1vzSebbWtkiicTNmwuKavB+tnFLBN3A+9n7hvSrruL9bGvzt1I1
3s9uMNxgchHvZ+dciblSifezu/oalp/F+9ma+68NluP9bKPN0wpO4v3s7ZvH
2RzD+9mquC/vl+L97PqPdscfxvvZHybqaynwfvYc06klhXg/++TQeocCvJ9d
+0KnKR/vT+Z/T/sfrcvD+9nt99xHfIn3s0WoX2kO3s9uEe8W7sT72SNTnRsy
8X62tMU6YRvez/763u0hW/B+tvYkre83Vir/D3zT1io=
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw913tcz/ceB/CvJLdRWpsi9TVJUVZIEXonly4iumkpX0WSS5ctG+fs7GMz
G5Mi1x3Zt2E7Q52WRuaybzhynRQ1jpyfzYrhUVasUjnvPeb18Y/H8/F6v3/v
fr/H9/u5DE5InbPITFGUIV0U5c////pnQ+LHKie3hjLjL9tSSc6alg5pe3q0
UUy43girtHWB35nCJ/AblCw64rN+h53oUVnd3dQm2JmUdDeHqGbYhVq62Nf5
PYWHk3Z09Cvuz2A3+snbK3HQH/BIakkee8qqBfagwI+LGi1aYU8KK8n68YX0
KOoxwsvteRs8mqhz252W5/AY2nnK43hLO+xF9MRxZ1sHPJY8PnGc0dkJe5Oq
5RZ2VU6/tA9pjzfu6NUFHkfCquJ/1mbweGr0qtHsu8K+RFerm53N4QlU5GSs
HNUNnkimbwJOT7KAJ1Ha8crDId1hP8rp0F1iesBEOeP2dyb1fGlBpN/fZZPZ
C7k/5czrCPqoN3J/0vV+H2x+Bflk0nvf3vpFH+STyWqT0/KCvsgDqLHqnd++
t0QeQCb7/o3lVsinkPHUJuF6P+RTSD/jNdRkjXwqkWOHw8NXkU8lxfEbr6c2
yKeRutojrPM15NNI30pRFv2RTycj1dejjy3y6aTmepVb2yEPJKOqybz/AOSB
/Pc9qLIbiDyIhMMYx4H2yINIt8irHDAIeTAZNrm3bB2QB5OYPNzpNUfkIaRf
t82zVJGHkNpUMrrHYOQzyDT+9+pOWMwgI3T+yqY3kIeSEj/ErG4I8lDSLz9P
qXZCPpPUg+O+PDsU+Uwyxf6wq8gZ+SzSBncGfD4M+SyiU025a1yQh5Ho6fJ+
kutLUxhpXx1oChyO+jAyPrV65DLipY0worL0WAs39M8m/dXF3ndhmk3C6L7y
mDv6Z5PiWd8neyT6ZxOdtH624E30zyHKtHQe5YH+OaSbara9gMUcUmtvTrzo
iX7O32l+fcso9IcTFWQOiB6N/nBS/mY72W4M+sNJzTf79CfYCCfx5em6rV7o
jyCjODRm5lj0R5A41nHL3Bv9nAdlLy6FjQiifY7Pk33QH0nG1eFbXh+H/khS
8te7lsEiksTV1FPJ49HPeb+UmX180R9FYsq8mkKYovj3/iA6dAL6OV+lXbkP
G+zgWu81E9EfzZ/ntP31SeiPJnpUVP8vWESTiJnh5uOHfq5P6LnwLKzMJaMp
IDuU0M8e9kVhFSzmkrKl65kof/TPJfoq70o1rMQQtf73avhk9MeQOL380hVY
xPD76n96SgD6Y8jIWnOkFFbeIiNu+wHXKeh/i9e/wfk7YMGufb7bbCr62c4+
+SmwEkvGE/tvr8IUy7/X0ArPaejnfO+LLpthI5a/z4bgx7AyjwzPGwXTpqN/
HikV9h55sGAXX7rRCBvs/e/u9Q9EfxznprxsmOJIfN1w4RYs4sioLXEbEoR+
9pWkS8mwEk/ignbwIEzxpBwaXPkQFvFE24Onugajn30wr9dCWJlPSmX7sN0w
zScjI3nvNViwp3Z+aB6Cfq53bbk8BlY0UmoPfJIAq+zmtceyYNJIbOuz5Ais
cb7ol923YcHOOB6rzHhpnW2pHRoMG9z/3b+3EWzSyLDc7RAHKwtIueEy811Y
XUDiWsqIbJg4r1l3ch+sLSC6VNS7FBZcv2v4oAtyPntOQGuNnM92j/r6npzP
n7frwsgGOT+BlHl9d/wh57ML99R3yPkJZIR0DDMLxfwEov0l881hkUCie9R2
aZ3rz71XJesNrl92zOGFnM/549IPWuX8RKL7AzufyPnsW+vz78v5iWSsPpRe
K79/Iv9eI1dWyO+fSOL7E0fK5Pdnm5v5fiu/P/veN72+kPO5f2K8+2dy/kJS
+pYfyJTzF5I4sn5DvJzPTgq8PlXO5/ot+dkj5Hx25JtnLeV89t11q36Xzxv3
N3sfrYJN7BmX1x6Wz98iUtzLH2yWz98iEjf3PV4hnz/OXW7tCJbPH/t2VYOT
fP7YK5+1d+B517n/07xzN+T7wnnKwIhDsInzc6WH1sj3J4mUoSU1kbDKPux/
20W+T0kkjm4oa8P7qLGjCjZdku8n1zudCP4nrHP+4GT7Evm+s70KDnrDJrb7
e/Hm8v1fTIqbYl+B9UJdTOJ9u4efy/WE89GfVS6ENbbR96a7XF/YNbO6PcP6
pHP/oEdxJ+V6xbnZ2w8+gk2cr1hUGAQryaSc9zrcF1bZq6d3VmJ9pGQ+HzRs
2w5rnBvpIkaur+y93c4OhHWud7mWVCvXa3bQwxV7YBPXO8f+HC/X7yUkXG3L
HWCVvb/nkDtyP2A/t2jfDWtLSImriY6V+wPn//GcYAfrnP92orBa7jfsNyy/
y4VN7MjCiDC5/6SQMLPKfQVWU0gZsivzvNzP2OqeLmthjet/TpjgJ/c3zg8M
GNGG/VDn3Ot+ZYncLznfWeuTCpvYEe0LXOX+uZSU6V7hv2C/VZeSKE/ulyf3
Y853JuVHwRr7/uPuVnJ/5voVBUEXsJ/rnC8KWPqh3O/Zqyam+8ImtrOd1ozz
gbKMRFzAhAJYZd+17ZUkzxPLuL7uigOssf9e/1kNzh+CbRsUmAPr3G83rHsQ
bLBLsi53gU1s51W7v8d5RllOSuuN1W/D6nJer8RSN5jYFtMzfsX5SOP6+l+3
7IEF54W9r0XDOufW0R79YIO9NbrkIs5fJq5fm6WthZUVpIxM8ZkEq+zqWX4t
8jy3gkSvLe8VwxrnH2bWL5PnO84TPbKHwTrns3/L+BnnQ4O94cS2PNj05+cV
t82V58dUfn/K99nAKnvUo+0VOG8SO0e5vhHW2Hdq4oPk+ZSd5z3eAtZTSZTW
JJ/Bedbg/FjCYwGb2LWZFyfBShqJkHyzDpyHrdJIeS1553FY5XwVbVoNe3D+
MLduHEyc+/2wtxXn6zDOL1ufPwZr7J2VkavhNK5/a+wsX3k+5/z8kiPtOL/n
/Fm/MesUrHP9/uJqARdx7nYvNwA2OL84qNwCruD8aFjGRdwPTOw7CTs2wY3s
bm/6hMv7Qzo/b2ujbGGrdFLmuzbX4r6hcr6u2nof7MGu8C1JgYnt33nTEw7j
/rTSj1txf9E4L20rLYPT2GkhmRvk/YZtcj4RDuewN7zYNAjW2e6TGupxXypi
t/nfKYYNnndci/sHXMH5j3XLg2ETO7N/v/5wI/uaW+A93MeUDL7fzrUphq0y
+HkpWylglR21Pm0W7MH1fc+ZOcLE3rFuZAPue2Fsutb8A6yxPfdFbYbT2BlP
IxLZ/werjNKn
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
ug==
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
aqQK3M/9WXFNO/fXSf8CrPUm0Q==
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw1lntczmcfx38aHUZEzVDqLhGlZEXRwVdFDpWKTqTuTnfnIyqx+vVQjqsW
YQx3K3R6iJnDJD+n1da0ZihrcjvNLE1UG63Wcz2vXZ/+8Xq/Ptf7ev+uf5Rx
eLJvlJogCEbDBOH///77Y0L1WfOMKv+6J/3LphS+f2xlg1or52k0evIK/e+1
wdNp/JsfHM9PAJvTEqfi73ZMAc+ktz1hmW5WYCtyDM54/dwebE1vNTXvr3cF
z6buL5u+6/QEf0RFtulrPAPBNmR7xGziwXCwLUk5P+26nQCeQ6aTlHP+SgfP
pYqVzns0c8F21D3SwUBjF9ie2uKWufbsBc+jovpP0m8dAc8npfcdo30VYAeK
Odta7nkG7EjKX9ZF914CO1FMfPvNnTfBztSW0jhp7A/gBWT9d+XlbW1gordf
NKu9esRZJLoQs9vBvRP7QkoZijpX1It9Iek0WF5pGsTuQlQx7ehb9Ta+u5BK
ZXL4Qx3OgitlqpUOTp+I3ZW6HZ+rWZpgd6PtGpO7plhgdyNrv4h+bVvsiygl
plPR6YidceioxLpF2BeTsiBgUa4X9sXsAdXT5gdgdydvF/fFz0Oxu5M85X7r
9hjsS0h2pljbKBX7EqqdYDuhaiP2pWQ93NDM/D/Yl5JSOyTm6E7sy0jpUKf5
/h7sy8i6pMEm7hD25SQf81hXKsO+nLxfLr89sga7B8nyrPZ7nsXuQSkHj+/I
q8PuSUWy5h++vIHdk6SDNwvavsfuRUXql3/vuYPdi6yDB9TVH2BfQTpnOkeM
eYZ9BakEfa0xXdi9SbV96Wz1Ps7kTd6vEo70DuA824dfSP55+P1/WfKmFtfS
6+dHcRZ8SK7+4vxuPc7kQ7Wbj8YGGXAWfcg6xLxvsil8dj5yWfrPFvB9qSVP
plloA9+XRMHmpoMDfF/SsUxrULnA9yWlodP07GXwV5I0QSHo+cJfSd335sZ8
EQR/JcnK12fMCIO/kuR+kYsqY+CvoqIxzb8Zp8BfRd1vhMw9GfBXkVR6T/Of
bPirSDhyrjYsH74fqYo/21r/CXw/kqWP+kyvBD7jQhu1yM/h+5EUceunmjL4
/qTcPsf4VRV8xgHRg+Zn4PuTWCBskl+E70/U7lpTKMEPIHGhftmFBvgBJG2Z
lNreDD+ASJ5r9vYufMYNTq2jH8APJPlAV5HRU/iBpCx7HGneCT+QZJdlEbPe
wA8kaU/EIat38IOISgwnTxd+5n4QqUxz/tLX4CwGkeSdNO/90ZylIBJ2FL9+
o8dZWE0qBx+re/rwGSe3DH5pAn81kfvbxN0z4K8m+cfrd4daw19DyvtfKSzt
4K8heVGP1p9O8Bkfnbnlohv8NSQZzHiYsRx+MMlzNpnP9oUfTLI7uanPAuEH
k/hOIe0Nhc/2q1OmLFDAX0uy8eKxpwnw15Koq7cybx38tSR8sNTOOAs+O39l
9doLIvwQkr0X2LJsG/wQkvRMD7V9Aj+E5GEZjWF74bPz6arwXw/CDyVl9431
ilL4oST3Cdd8fAJ+KAkdzWZBJ+Gz84n9vzSdhS8ngU7Nnn+Js0xO4tfFs8qv
4j450ZxpKq1GznK2Vzd4xDfjfjmp8s9kN97hrJSTREKOcTt6bNev9E9/xFnF
7ru1dXTDc/TDSDBcfkr3D/TDiPbuXRjci34YiZrtt5T96DN2zwp+JLTzfhjJ
y2r7JmtwVrL78o6W+mtzlth5wSNmly5nVRhJAUd96iZyFsJJvi066oURZ1k4
KZsCqsdN40zhRIZaFvYzOcvZ+bP9nUEfoc/27OK+DHv0w0ncN3lFsTP64SS7
1jJU4YY+81sbR9ctQz+ClPYjtzR5o8/YJj+i1R/9CJJ9PPb8w2D0I0jYmbT1
aTj6EUTvltx+FoM+46G5J54koR9B0vmLWh3r0Y8gsdhJuJuFfiRJxyZ92iii
H0mkW3LtQj76kST4Pzh4bDf6bP9cR1ZYjD5jk3mBGw6gH0littfSwCPos/u7
57yzK0ef7V9fS9SrQj+KhLBzNV2n0I8iafjVS9e/Qj+KRGWuct8l9Nn54Hy5
4ir6bG/wGGbTgH4UkZXL9oHv0Wf7j9f7r91Gn+2WRiH5begrSHQsPr+4A30F
SaeXjxr+FH0FCc7xYfUv0Gfnm4fVbXiFPjv/9Vhj8z702T6usKS9H33mN4Ya
7hR+4X0FUc8aaY46ZyGaJMFL7BjJWRZN4h9vwreO5UzRRJv7E8w+5CyPJiFC
o6zBgLPI/C2ntKJMOCuZL9t8bMiMs8TOq/+etd8SfXbf5diCmTbox5B4NfRp
vT36MUTlprlezujHkLRwRGy7K/qM/3BRRi1Fn50/oGvR5YU+46FS7bRV6LP7
72p79Aahz/yX8b+vC0U/lsS137zsjkQ/loRTBgHxceizXYi0fJKMPuPp29YF
bkA/luiJwrIpC33GPfdDHET02fkF/x1ZmYc+u39EuZ3eLvTjiLoyft1chH4c
iTb39Z+UoM+4Kal98SH040jIvDe9Qok+44FyDY3j6DOeqtgUUY1+HEkDn2+7
XIs+u+/h9VkfnEM/nmi/R0bcJfQZb1GGXZbQjyfxpOyN9jfox5P029SZwU3o
s71T0K1oQT+ehNT+ytd30We7x8pe+3b0GRe49X2sQj+BqHDolPQM/QQSDE6a
DetEP4HEnLTQBd3oMz4WvXpTH/rsvGWp/lf96DPOszj+cgj9BJKGjRo0HvGA
91mvl6b4vc9ZSCTxylX9/DGcZYkk9GS/OKvHmRLZ3y/hhY8mcpaz3WqFzigj
ziLbu4yTbU05KxnX1p5cPYOzxO43afox2wr9RJL2zW9X2qCfRJLhtVuSPfqM
jxjWdDihn0TiI/WN/S7oJxFVWtjpLUGf7dftXlh4os/YqOXThb7os/ta99j4
BaDP2NPgR0Uw+slEcwcT0sPQTyap6obWVgX6yez/p78rC+PRZ+eHm3p/loI+
20/X/aPcgH4yCaVOF45noc/uezYxpyoHfXY+8IpfzVb0U0iq3edcs4OzTgoJ
u95zrCrA96SQmBnpfXwPZ2t2Xk83W3kA38d27ciGA4c5e6ewvxdOWBV+ge9l
9xWYndtygnMK89dYyNNr8P3Mt+61ij7NuYid/7Pe1P8c3sPOD7vh6nqJcy27
X2ZXYCXhfYwPu6tPuMm5hZ0PkJ0c+hbvZXvj823Pmjl3s328VPLtT3h/KtGk
hvvVbXg/48Tx/rsf4P2pJG28Pir+Md6fSqL4cMj9Od7P9uqM2VNe4v2pJIwr
KRvoxvvZ+SbHwDt9eD+7/1WyT1U/3s/2aotPs4fwfuZ7xU70Gd7B3892d8OX
xlqca5nv7DjytTZniZ3/4HRm/TjOLYy7FXN3fshZxb7P023xKgPO3cxXm1ll
YMxZSCPBfTDiyVTOOmkkNe7ZUGHOWZbGfh80qOJncbZm+8bEE5a2nCmNxFz/
pi57zt5s3+DtVePEWc72i1M/inXhnMLu8z2caereIf0P9X0XiA==
             
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 295.}, {-31004.56986172707, 6174.699877471663}}, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"E\"", TraditionalForm], None}, {
            FormBox["\"Simulation n\"", TraditionalForm], None}}, FrameStyle -> 
         13, FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0, 295.}, {-31004.56986172707, 6174.699877471663}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           TagBox[
            FrameBox[
             StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["5", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["6", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["7", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["8", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["9", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["10", Smaller, StripOnInput -> False]], "Placeholder"]},
           "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm], ",", 
                   TagBox[#10, HoldForm]}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxd1nlYzdv3B/Atfh6uoUKRTEWSynB1DVEWuYrMN+lSpkSRShIV0RwpSqlU
GjTXOZ35ZHaFyHwNUbpyEclQxEWG7/qcvf769Xgez+s502fvvdZ7baO1vks8
tBhjozoxJvz////UTTG/15zrCwz2BXkZ2QD3cGBpRn136cyHvnWOnmNzLYHp
mz2+d3YpvT4BmHe/mQ7vXMGjsfn+N8lkYC9G9V/ZYy293wbYvXIP8wwP0Lzs
MANYTNGPwaZe9Hk7YN0jrO0rvCHh6WT8NxuYTtW7egM/+j4HYEe9+0HdFpjW
cGSovpkjsBUJTbVpW+n75wPzdNQqW7oNtm0KdcnvuQhY++7qczrb6fcWo0Nc
h9XsgHn47tORS/D7D0luhQXT7/8BbGFs6INJO2G45gedgLXeWWD7ehc9jzOw
jitB3bJ3w9c1ib+2BiwDtvVW8pDiPfR8LsC8xoxp2x0Gt1fODOn+5k9g4pvv
fziH0/OuAHZmTOVcywgoXvGhytjDFdhagFqtSHp+N2BDJ1sX1UaC8PTTGlYC
W2Znd7ositazGlis9QvD3dFQVir8oWfPyb24OIbWtwbY8YRHp4bHgr5Z54Xq
JrRC2d75Yyytdy2wwVETsy7uhfAi4QHcgT31atyXso/Wjzb+anxzXRy8MVGk
3lq5Dpja38h7wn7aD3ST5Xv3TvGgebwjHsAi9bIrb8TT/qwHdld7pHdGAlww
Fj6AHrYhaM+GA7RfG3B/9M+FGBwE4Wk+9fEEZjMvrjn0IO0fev/4mF+eHYSM
ocIKvIBZJ6Q+dkik/UTrQIaXKBG6HvW5rh23EdjHNd4lukm0v5uAjfNvzN6W
BP6DqrcMqkanbb88/2ES7bc3sLjhbfJph0Dz9s6bgT1rN76TfYj2Hx26zLhc
KxnmGOw48dt0H2A5VRXTPZLpPNBX62MSqpNB2J2ZIb7AAva6p5ul0Pn4Aft9
wOfVcSmgE5ccVrQCvW7xf89fp9B5oZ2Stc0WHIbZNefuiL6gS961jK44TOe3
BdjYKVavtVMBF4sngO4yIn6zXyqdJ9pqWVrFrVSQOggP6A9sTXi7bFwanS/6
hL/NjoNp8EI4zjvo9SN7stY0Ou+twHY//jR3YTpotmcLWn9i4p/idDp/tLO5
t0WvI7BEs8EBwBIn61/YdITqAe2yxtCo5gjECl8vQuvZ/d+sURlUH+jPw1dY
RmfAGTzdOsdtwP7Vymt4mkH1gk7Nd106IxOE02hsRrfk9Ug5mkn1E4j9EGSZ
1ZEJmuXGoJuSbH1csqie0CbOx7sps2CVUA4m24E9HK+/Wfco1Rf6ZvHVjM1H
ISVMWDAa3BakXDlK9bYD2HtD3eUm2aDZ/jVo8YvIV3uyqf7QKi0D+0fZwFMw
CPtn5+BKwxyqR3S4s/mEOTkwcboFbhG6yLIlOTCH6hP90ymx4VgOaMphWjCw
d86Le93OoXpFR311G/EjBzSPU4f2tm82Ns+l+g3Bet47ortLLtRiNRjsQC9Y
BrWRuVTPaKtE73hpLvTSfGAnsEdeD8z/yaX6RrdukMl+yQPN9ijQG71GGU/K
o3rfBexb0YZg9zwQqttiCdr9ZObJA3lU/2hF1ofnJ/NA/EXYUPQwceqXF3nU
D6HA+ivkn/oeg2fCcSWgJ/y7pWH6MeoP9IaHHaJNx0DzdovdwK6XBXumHqN+
Qec91u9VdQwWagoOnbvlc8bbY9Q/e4A11M7WG5jPn98Knd3FLOj3fOontJvn
xWq/fL6eCPSD9hmdMvOpv9Bfhlwwqc7n6/sbveaJ32/v86nf0P+e8R43uICv
1ygM2KoL9foOBdR/6FlxT176F/D1+6GDp+YWZhVQP6KD4m0WXS7g+3EWvfHa
g+fvC6g/0RYPkjcMLuT70zsc2PeRh+7ZF1K/oiur28f6F/L9ckOPc68LzCyk
/kWLbdeVXirk+1eOfjhNVtNaSP2Mtm98WjuwiO9nBzp03oC/ZxVRf0fgftj7
HPcp4vs7Fw02XRLSiqjf0YU2nxeeL4JXwnLT0ZM7ef5sKaL+R3s2+2XqFUOU
0L4v0UO0xplOL6Y8iATWu/P5bM9iGCYseBLabbFd16Riygd0DLu1/GQxaMor
Gr30bkTWs2LKC3TTjOAbvUpgqfB3D53ld+PNxBLKD3SfaRkdq0qgNQALYkQU
sGirjv9iSyhP0F9zuj2VloCmHLaiHXc3nKoroXxBh0QfiupcCiOFxzmPrhk5
y8ailPIGHRnX7ZlTKfwltL9uNLDXGV+CdpVS/qCbOsb+LCgFV+EDq9HRvS5s
vVFKeYRub7te+6kU/sOn8axAT9znYT60jPJJ8I48H/syENJo0w90y9DMXN8y
yqsYzMtirwupZSCkh898tFmHUe3ZMsovdMjl+ocvykBzXJno/EjRNe1yyjP0
842iiknlsFZ4ews6YFdb+KpyyrdY7P/oA7NjyuG7EB/W6FMDs76Kyynv0O0p
Y7Pvl0Oa0I570Z+Hulr9KKf8Q7PySSdMRDBBOIAHaIfP98fNF1Ee7gVWd3BB
WoAIMMySw0zRpTdkrRkiykd0+4P+1lUi0JRzoPB6QWLAKxHlJXr/1wk5umLQ
bCfeQ9i5zX1OTxZTfqLvesDVVWLQxGW/fbifhrdrosWUp+jotNqTIjFMEQ7M
Hb3g5Pqjd8WUr2hjq0T/DjHcxdUmytCfYrwmG1dQ3qJDdbRaHSrAV1hApzhg
3b55p/tWUP6igxeesjpcAZp2X4QOeN7p/KkKymP0Dd+FM55WgKbcstEnpq54
2EVC+Yz+PmZEjwES0Cz3LdplTI+J5hLK6/143lUDlttKgF+H0Yfdl25fLKH8
Ruf4X4lfJ+F5uB99AXZlbZdQnqMrewQV7pPwPKxHW/y8UJwloXyPx/uNlVe+
RMLzcDS6SL45vUpCeY/O96+LuS/heRiEdnBW+zZLKP/RRr/2XPxNwvPwMvr1
5UZzbSnNA+Hz16YxYynPw/4J+Hz/mN6wktJ8QC8+WJJiL+V5uB4dvvaK83Ip
zQv07EsJupulPA+VaLPBnS7tltL8QFdVmgYkSXkedjmA9VDffVCBlOYJOv24
+LRayvPwD3Ro4OA/a6Q0X9C9R7m9fSTleZiHNr0XsOudlOYN2j5wU1ctGc/D
NvTxj/Z7+8lo/hzE+TxWt6upjPf/MPTLtus7p8hoHqH7fo984yjjeWCPvt3Z
xmWljOYTemfZt1N+Mp4PvujauBrDCBnNK3T9WFFAioznxWG0pV5ZdZGM5hf6
fnlNvxMynh9n0F+X93G9JqN5hp6yPTbrHxnPk+foi/MmPGyV0XxDhw800O4s
5/nSKxHYpL4wXU9O8w59xk3sZSrneWOFlvfbmDBFTvMPvdk+SOQo5/njil70
5cklNznNQ7STcWmdr5znUQR6VEXtyzA5zUe0SZhf2yE5z6cydKxPcHuBnOYl
On5mR5tazvPqb3Tx6c/NV+Q0P9HeKTse1ct5fn1FnwrYc+WNnOZpEjCDb3rS
n3KeZ0bomL9sD+kqaL6isxcxv+EKnm9z0M9Hr7b/TUHzFn2i2t3AXsHzzg+d
mKzT5KKg+Yt+1L5JtFHB8y8N7YO3/J0KmsfoQdftLBIUPA/PoXPra55mK2g+
o8+X6h2WKng+vkBb+ZjZVSloXqPnL+rRclfB81L7EPab/7n4JgXNb7S8Zb75
ZwXPz4nopquVVd2VNM/RQw26LjNU8jxdid55y/q5hZLmOzqsaYWPrZLnaxTa
wN7n/UIlzXt0+L3ALWuUPG9F6BvewS3+Spr/6DmPd62OVPL8vYs2/S/qVoqS
7gPoWYGpU4uUPI+/oQP01bmVSrofJAPz3dusVaPk+Twc/WHHhFX1SrovoE9F
p6teK3leO6Ib5w3r/kNJ9wd0qNs1Z20Vz29/9Gi7vOxhKrpPoGv3FD4dr+J5
fgTdnNhgbKei+wV67itHNycVz/e/0OGfPiZ5qOi+gX5i2FgVqOJ534yeXtm7
NUZF9w90hHF0/3QVz3+dFHy9dK51qYruI2jjtNUuJ1V8HkxG37G8tuWaiu4n
6PqCxOgGFZ8Pq9D2VsrDb1V0X0EP6To176eKz4sYtHqGaYmOmu4vaGXX0DIj
NZ8fYrStj13Jr2q6z6Bv7gvJs1PzeXIfHew5OtVJTfcbdFVPpxgPNZ8v39GD
tn/zD1TTfecw9m+O6fIYNZ83JmiTkIfT0tR0/0H/0q5nWKLmeTgP7dHW2H5c
TfchdNQftjU1ap6HAejs9vEZ9Wq6H6Fbis9ueK3meZiBrrNtGftdTfcl9M3Q
yg+9KnkeVqEjzc3lQyrhfwggQMc=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
a0+vgv8Dx/NDHQ==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw11gk4ldkfB/C30V+bitapKGnSxowUqTF1tEihFGmxXUJkcAkJ6b323bVz
bfdel6iUad87yn/qT4uk0qLRNCVNCyqlZfr/znvOeHqens/znve9Z/3+zlSP
wPVe33Ecpz+A48j/J54lrmjE01D4TbXclu/34tH3rX1+Uhgi6deXA125vZg+
n4c09Y87P+2swl4dXXe+1JkhTQ3zjz43qlj7X1DHrUdGXcersPDYygLx16qd
vcuq2PvLkKbBjusd8VU444kZ/LNEop7Bdzb5//s9KyT92Qpfd6jC5u2yKeNm
WSP5JYu7S83//b4t4gdt9Dg2rQqH+kVvUmnYIXmLY5X+sH9/bx3COwuf5vdW
YhtofS5uPcKNY0Xq9yvZ79sjkSrWPrS+Ek8TftAB6cb5fn5SXcn644i4lgVZ
66WV+JN7lnF3yEbEW7jY1O+sZP3bhLCWk4eRWyW+6bo0csirzQh7tanLLStZ
f50Q13jUT/PHSlzt9PaSnpcz4o5PqJeMrWT9d0GcR6rJuy8qTHpv3u6KUMvH
99v+UrHxiBDmmgzbm1R4/z7yJ0Jc6Vt1hyMqNj53hP/8VHNVpsLjZqmtPfHM
HfEvNBavjFGx8Xogzke965KvCsfsJR3Yivhm/sbSdSo2/q0I9bePaTBT4VfT
jxY0u3oi/if7Byt1VWw+wD1vl10fpMJC92ReCHefCdj4poLNjze8Xxjx5E4F
btAjL3gjblZIfPD5CjZf2xD3ctGBgVUVmPSmb5QP4ko6h8rSK9j8gcOSzxqH
VuDiKWQEvoi7ZvPgunMFm09fxDvE8AHLK7B6WcC1kanbEe9b1aBlUMHm1w/x
s30unBxdgYO1LwdpXwY/PpS49bOSzfeviM+snDfqiRILzdX8EWd4oq2hUcnm
3x/xlmWpkYeVeNWE8NMmSwJgvF4iU5mSrQd4jnj7e4kSk9lZGhmIuN6Isyd9
lWx9xIgvrPTh1ymxZmquZK+TGNYzlLdZqGTrBXa6P0ZnqhJbNuJbtf3gC/NM
ewcr2foFIc7N4V1TtwLDYGEFwNcTXPe1Kdh6BiHeMSs2HSvwb1akg8GI0z4d
FFqtYOsbjHi3RlMPqQJ3kuW8BT4+qsM+XMHWewfihgRErBYpsDA9QTsQb75i
lKWVgq0/2CL7iKWRAq8XJjgEcfwTX5vvFWw/hCA+0hVt5BQ4iXy+FjzzksW2
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

             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw9lglYzekXx68kYy3GUKRFiWhfVNpOe7d7G8YS/ikJTRhtKsr2KylbhRbL
iBqMGdSYNGR/74+RdVDUaOSfGVO2/jLFVCr/87vznunxPJ7Pc877u+857znf
c4wjY2cs0ZDJZCZ9ZDLp/yWNL2q7TzqD8EuNqcUbFfu0XhFtXeIOFTvSOnqQ
1eZAL3i9XXB70KpiZ5qy/G4yH8hf6Hml7K2K5fzhjP/8IVroCc/+S8X++V4g
vFY1PY1tUzG3hn2GI80VIIu3MAhpp+8HQ0cf/SbPdyqWtHz93MODp0PEGfvB
lu/p976AX50cF439W8WU6H0xYwZ0RE+5pNNBvz8TAjedbNXqVDET9Q/OgukV
2b987KT7hMAnkx0tPnSpWNfCnXatiXMAeguedHyg+82FPZdsznd0q9j9cO81
A1rmAbw13NPVQ/cNBZssQ2Vvr4p9F9p2ZdyS+WAUkVfWVyby+4dBRMv23QP7
iEy6vVtDOAg69/47XEPk8URAq2NdhH5fkR0/Jv1FANytbTfTFHl8C+GkKUu2
6yeykeZ9p51pWgiN3/uIHloijzcS4s5Xn1L0F1n6UekCi2BHT/HEeZ+IPH5k
lyO9UQNE1jK+Yve98MVQ/HzviKSBIs/HYtgxv0e+cZDI1NfbtwSKi4dt2DlY
5PmJguJBj/MPDhHZ1XHSgSjQyTFdUTpU5Pn6ElprEl+e0xaZdJv3w6OhUX9U
a5WOyPMXDezdiMgHw0T2taEUwVIovuI4vnG4yPO5FMCwx+DVpyLTOhBzR3vb
MpAZfu/4boTI87scjFJtpvd+JrIE/ap4/arlUJwPIVqjRJ7vr4DFutoM0RWZ
2r3vCjDKc6warkf5XwGspk1z1GiRyfVWn3P0jMH7vajRG0PvEQOCgYPhGH2R
SdnxXhMLxVpF1aPH0vvEARuRV69rIDKdbflpR0PjQPCeZPqZIb1XHBQ/0C3S
NhKZ/01WU9oZB0ZtFfafGNP7xUPj1L9qe5ExWHyBeGDBC5LbxtF7xoMs3ESj
yURkPwZKF0yA4tsfltWa0vsmgNFxl2+ujhdZs/ScNQnQGHp570kzeu+VEGHc
67NvgsjU6YlfCXCpLS9tIr3/ShAGTFwXZS6yGeoEJ0LEt8faAidRPSQC26zz
euJkkW2WPl+aCKCKD9WyoPpIhOJPv3R6inwJX7dekQQC65981pLqJQlkts1D
cq1EJr1G44skgIvD3y+0pvpJBkjSNrOzEZk63KxkKG6sK/hoQ/WUDEYNj9xv
2opsgVQO41dBcWL7yF12VF+rAEqTRs+xF1lBmhTwKpCt0fXWc6B6Ww1GJRqb
f0VWp3/hahC+EZvyHan+VgMrD573+RSRydR/KSCc7anXdKJ6TAEmz/2yEnmK
pwWmKAXgsOGHaGeqT7TfnbRrpIvI1OXglgqyki3mKheq11QQ7sZeip4qMvV1
6tE+bNnnQ1ypfteA4Du/rgy5DqtBb/UazPeGOcFuVM9oT4m48xx5iPrAWhCC
GpzS3Km+1+L3TAtHeohMnZ6KtQCvTzZ/50H1vg6EeUoLZ0+RSdVtMWMdyCIH
LL7qSfW/DlibT24wiKysU0oo8oSDZTVA/bAeZLv6XgnxEtkz6bly1gN8W3Sn
1ov6A7nzt7szvUWmdrfYAIK44tYdb+qXDdivXqKvj8imqQtuA7DstNOVPtQ/
ArCwwmPmvvz+DgLqn3HJbl/qJ+SGD/s1/Hg8G5HNnEuW+VF/4fm3+j/e9ePx
VaM9Zfw9W3/qN7Qf+thnpz+P1zgN49ka1OJP/ZcGzPZhqX8Ajz8O7ff0bYoC
qB+Ry289bA3g+biMfGTVIa9A6k/J3liUG8jzMzQdhKNvbtQHUr+mA2uosDCR
83yFId+JuhUtp/5F/xsRx4/Lef5OpIPshHH1Kzn1czpAYZCfeRDP5wfk40UD
FwdRf28EWXX3hP1BPL9BG4ElRB+6H0T9juzXm66pENlLKdy96G/ecdtBQf2P
3HAsKxJ5k9S+z5HbM85mK0gPMkAoGLL0NLKRFLBTBsiW/LH/sYL0ATnhfKhM
KTJ1eWUia0ecMFaSXuD5n34oAOTZ0t/DDGDa+w3ClKQf6P9w4uerkFsTsSBM
N4Fwf9nkXCXpySaQ1WVePIysLoeVmwBunRxUqSR9Qf+9k8beQDaTriMiz/Dp
rFOS3iBbhhx9hqyS2n9YJsj23rB6oyT9QZ4/dPffyPOlAxHIZQeae5SkR5nA
FD0TNIJF9jfeJvqHTIAjFQs0g0mfMkHoH1IosaRGy3vR/9rqGsn/H73KAvjq
rMFH/J6kHjHBWcBaKjd0Kkm/0P58TO9bZPVz7Ueu31LyXEl6hv6pJ+IbkCMl
91dZmC+r5HtK0rfNIJy7cFqF3CPJx1RkTQ3XH5Wkd8jPvh94EHmP1I5bNoPM
Pdxym5L0D3lo1bEkZHvpAX5F/9NbtoYrSQ+3gBAV+MAPGcUsP23CFuyfktzJ
StJH5NnWV7WR1eWcjPw0M+UvBeklnm93OlODrE7nz8jK2xmnFKSf6G9Z9WIn
slouR2wF4dHhlhgF6elWkE2s3x2E7CI92CLkxzVvTBWkr8jJ77t7sN4fYLQ7
y/H85qJrD4NIb9G+bMysE8ixUgB9toFwrfJEWhDp7zaQja+om42sbvfpyKe8
Hk8MIj1G/zNbVV3Yj+pyO4gcUppzS076jP6mF4K+RlaH+z+0v7jYvVROer0d
BMfS407I/6zDyJarwzXlpN/bQWYh078XyPVwO9rX6b3aF0h6jnb7bdWLA7ke
/obMhj6yDCR9z8b+mNbvfQDXw0nZIIx9HXYxgPQe7RorX2wM4HqYgvaYJWXy
ANJ/tF93PDU0gOvhdeTUgN5qf5oH6D/gTUGhP9fDUTn4+/HCPH+aD8iH+l0d
48/1MCoHhIn3oxr8aF4gy1/FHPDjevgT+puF/h7uR/MD7ea6VQZ+XA81c0E4
MsDkiS/NE+QPWt37fbkezswFWVjdnFBfmi9o/9nWTc+X6+E3aH95oaz233mD
PE77pzwfrodvkWeXzZr+7/zZAYKGTt5gH97/RjtAZrI36bo3zSNkowN9Mry5
HgSg/++Rbp7eNJ/Qfmz05C4vrg+xaHd8Xl3hRfMK7XsanGO9uF4UIs/qXmju
RfMLOcBx5h/A9eMSnq+KHlYENM+k81ElIcD15E/k5y39dYDmG/rHlMpveHJ9
GbIT9dlneTrNd2PkFPd4V0+uNw7IZnoR7R40/3aCEObjVurB9Wc+8lPdgVEe
NA8l/6Y7Bh5cjzYir23eVudO8xFZVx64w53r03E8rzehv9yd5iVyRfbtPu5c
r6qRzVL2n3Oj+YnnOx+mrnTj+tWF9mfCcgs3mqe7QNAKSPjTleuZ8S6QNf+5
64ArzVe0lw26P8eV65sc7cPn2AxzpXmLnD+n4uZUrndx6J+RHZExleYv2q2W
OXtM5fq3B7l2mmeHC81j9B+4a3W5C9dDhvb0pOavXGg+o32RTe4EF66PzWj/
4mXC7840r5G3XigocuZ6qZ2H3yvvmutM8zsP+6fq8Ahnrp9TkO1eF95zonmO
vEP2YDvtn+HIT+rC5U4035GLnKZqOXF93YTfr6yLvjKF5j3az0a2CFO43pYi
NyTd9JhC8x/9FSUaPY5cfx+g/bPoPecdaR9AewrkpDpyPe5G+6u8JhdH2g/y
QfC8fKjTgeuzST7Ibg+/ftaB9gXkPdWzUx24XivQ/z9Tprk60P6A9utLT3fb
c/1OkPy3Z1+yp30C/Y+U1wr2XM/3od3iWZ6PPe0XaL85tkrLnuu7Cu1npifc
tKN9A/lJ5O4cO673L5D7WTvPtKP9A88/ywjRteP6r1MAsgXm7Q22tI8UgJBZ
O/ywLZ8Hzsj3XCuW2dJ+guzV+8jWls+HBXg+rnJTpw3tK2iv7KpU2fB5kYUc
p0jaakP7C3Kj2YWZNnx+lCFv/Zgz1ob2GWRLjzfN1nye1CJ3eT0pt6b9Bn/v
fETYems+X3rQ/kvTiiBr2ncKQUgaNWyUNZ8345HvWwQ+s6L9B9lg7ohyK66H
ykKsF1WyYEX7EHLIlrhpVlwPE9F/6DUNQyvaj5B3Z1q9seR6+DUy3G+/bEn7
ErLt4ZCdllwPryAnvJu1CPn/HOv6bA==
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw1lwlYjVsXx19FbuhSSMiQjF0XtwlRlgiZyxQlJ0kRRykqfemt5KA0aDAr
boZQ5uki2/jut2sMoWsIUXJTpEsk33rP2fs8nsfzf9ba5+y99lq//85i/jJ3
Pz1BEHo0EQTl/7YlEwIG7naE6Q2uns8tJFL6rrjh6LiRAJeLK9r3lsiZtxqX
QjIK2rikXBttJZGk10Pw3xj4enjO5sUDJOKnWwC216e20VhLZPizbd1M+00A
W/NVZVvtJaL7/kmQ/Sr+9h4HiawIXO2R02oqPLbdkLTbif+eG3gES+8ynCUy
EbMvrnGHGqdlB6PH8N+fBtmGy7K8x0vEUvuD0yFgh+MO68l8PzOh795D4d/d
JPLNJ9W6JnQWPH54us25GXx/HiDGzBsdOFsi97ydIw2rZoNHoPjFeC7fryeQ
rAPGeSqJHPCsvdrDzwtUTl+ihi/g+58LwuuvVsRfIsruhz/zhqOn1rYYEsjP
owIo22eco5bIoYPKRwUpC9VDmi7n5/MBlV5ZhMcKiZj2059y5q0P1HiW3c8O
5+edD0K75mOfRUokdr+yAV9QSWuKjaL5+X2htKLLOutYiVT1Orn5rvcCyPbV
WzAhntdjAUytOBfqsU4i2u1t84O7la2k2Qm8PgshZcCHRVOSJHKth7JgIZDn
C9RDU3m9/AFswso7pEtE2c1/JgGQHdm+sjKT1y8AxJxmG49vlcj2bsoJFoHY
+06FegevJ2rX/R26Z0nEYJf6VuuExVB6e67djd28voEgfnOd55MjkeXmUrC5
FAiq4sEnP+7j9V4C3ctmTA/LlYg2XX8pqARLn0+HeP2XQulhrx/z8yXi2jH8
L7sRahDSqybKR/l9qIG4Pw3tdUIiSnWcI5cByXHYHnaK308QZJ9tV37pjETa
JKTH7PcMAninEhvP8fsKAiG3OtnmgkTGFJL7efVBUHrHc8S8An5/waCy/H42
hkgED4s3EAzE6k6f7Vf4fQaD6LXyzKFrEjk2TtngcshO65J+4ga/3+WguhVc
eZxKpFy5zvsYn7CpPLeQ33cIiNV657bclIi2PMEheP6sxOjb/P5DoHRwYor3
XYm4awscCtk2A2rting/hIKqR6fXzR5IZJ3y9XmhUFrTIvn2Q94fmP/nw14p
jyRSgLdbMmEFlDp4F49/wvtlBYhS4p3GEokot1H6bgXAv85w+Cnvn5Ug3HCb
Ne25RLTH1aDuHDTq8wveTyuB1A+ySX4pkXlKO/QKg9Ksb9N7vub9FQaC/KP4
RJlEMmKUA4dBduDv5Y5veb+Fg5Btf+JKuUS05fcJB1XniADnd7z/MP74p83F
SokI2k8EiINXOdv8y/sxAmChHcmpkoj9iP5YIox3MX1iXM37MwLIzU1nV9VI
RNsOw1cB+Zi3/sVH3q+rAD7VrIRaiWi3U4K6m//BnZ95/0aCaLV10pc6iTzC
bugYjvrmuvWTvvB+Rn3/8NrsrxIx0i74HwgBVUtq6nl//w/I/mxfx+8S0Zbn
JMbjNKmaBt7vUQDvC83v/JCI0t393aNA6Ftv1e4n7/8oEDP1X84UKMmvVwqK
esNw381NKJuH1QArZjx8qEdJmXJdSatBnD53jklTyuZjNQiOl9pNakaJNr1/
NID7yN5rDSibl2gQ9+sfvdickinahosGsju6qPYXyuZHBOKpyevbgur2byuC
MNJF5dWSsnnC+JthhsmtqO48cRj/4XKDGFE2XxiPzDz58VeqO1+RCPDibI1F
G8rmDfW+1Ew3Y6o7r0UMkFfel0UTyuYvBoR/zyYcacvOHxQDon1a6+ftKJvH
GIBZjgtbmbJ6XML19b4HHDpQNp+43tbkQ4AZq8+vsSD8eXzy5o6UzSvqz21e
Xu/E6jUX9VDP8587Uza/qDWWtZZdWP0OxwLZ6LNzWlfK5jkWROfQ23HdWD2/
xwIcs9x2sjtl8x0HItnT9q0Fq+/4OCCtUyeZWVI27xivapg9oScllcpxt8YB
jPUbH92LsvlHnX9+4MnelMQr41uB6/0XdqrsQxkP1oAY6dzJoh8l3ZUDD14D
pHiv02wryviwBgS1T+am3yjRttdazPe7OvBWf8p4gXHnrWaGAyiZoXwe4vq2
1t5jBlLGD4yfVxnFD6KkJhQbomc8CCarra//QRlP4oEMDHxiYEOJth1C4kHc
nWY03pYyvqA+WP0kyY6S3sp2rqBWG7g+tKeMN7h+Ys2CLkMouayMv/FaID89
BvsPpYw/awFexcjHHSjxUhaoUHcd3VMYThmPMP+9ydQpjpR8wd0EHEF9/Mf0
bCfK+IT5Y4471I6gRKFRYCPGW0T/Mm4kZbzSgGgy4/ouZ0oUeqgnaQDGFYZ9
GUUZvzRANJ17u7tQor2uHZh/YkBx/hjKeIbxv9M3Go2jZL6S/h7jNQlualfK
+LYOhEVN+twbT8kPBR8O63B9mon9RMp4p8TTzXZOomSLMo7rMT6shaPBFMr4
h/GK43HBUymxUS7gMcZ/bVbz3I0yHq4Hwcw6fvI0ShBm6TF9ULfvO4ZMp4yP
qBPS7GxnUqJt55XrkWcvZxycRRkvUV8ckdtjNiXacl5HfWr3HzvnUMZP1HUF
NR29KNHist0GENeZVmyZSxlPUdvWmHWaR8lQ5cJ8N4Bg7r1mp4oyvqKe7fSb
5XxKHuBpU49jftLwXw/5UsZb1CH3f7fzo2SZcoAmCSCOnLzh8kLK+It6aKHl
1ABKtOM+NQEEyyHfShdRxmOMZ841Cg2kRNtuWaiTi70Ml1LGZ8xPMK3IVlOi
Pe4HjJsuzncIoozXiSDUf8kvDqZE9xxGnXKlIjSEMn6j/nRgTvsVjIeJqMcG
6J9dyXh4UonveOkVznj4TyKIB67W6q9iPNTfCMIxhyF5kYyHVhvR753zPKIY
D91RfxfcDKIZDyNQO662OC0yHu7G9XW55gGxjIcUdf85YL6G+wHm35u4oSie
8bBDEgjJfb9u0HB/SALxVZTGZT3j4ULUjyQ7vQTuF5hvvlS4nMh4eAr1JVIW
k8T9A/N76JeOTmE8bJqM/TK/2nAT9xPU1Q2t76UxHk5LBuHOc6dtGdxfUFc2
i/DbzHi4B3ULn/PWW7nfoC69q6e3nfHwI37f9b4T7+/g/pMCwpKB6ft2sfnv
ngJiXNajyGzuRxhX9W07bQ/jwVjUWepR/XO4P2H+hVZ+zfcxPizDeEFaaNl+
7lcYP5ygvprLeJGJcdvQKTmHuH9hfOD1tpo8xo8CjA+oPhN4hPsZ6nrPIe7H
GE/eYL7BslSHE9zfUOuvvdTzFOOLUSoIrvUFbc5wv0PtbJ7YeJbxxjYVxCZO
lh/+4v6H8ZBc8cUFxh8v1E33ZRcVcD9E/TQM/1pgPIrD9XNUHQuucH/EuP+u
xaevMT4dQl2iXnb0BvdLzL/aqudhynhVhPHiY2tyC7l/oj6SufHATcavb6ht
ah1yb3M/3QTC1cZ1h+4ynllswv6vCTlSxP0VtbPw9eQDxjdX1J5+xheKud/i
+gCPC9ceM94Fob5uUne7hPsv5jfePlPylPFvC2pBFiqecz9GrXK6+V8p4yHB
9TFq0+avuT9jvGLbP2ZvGB/LUUNzs/7l3K8x/1q9BO8YL1ungeByvnzme+7f
qP03h6irGD/t00C8+9RfU839HLXbM7L7I+OpN+b/rFp1sZb7O8ZD/DeV1DG+
xmO8bK9+/Rfu96iHGf5t9o3xNg+1e13Z0Abu/6gb703yamT8fYB6cEs9rAF7
D+D32xo35ujJOh43oE72cPq7qczeB+kgjJlz6ZOBrOOzZTqIn9KiOhvK7L2A
ukizwqWlrOP1BNRvLvwZZCSz9wOu/17QdGdrWcfv5Ri/1TWj0Fhm7wnURsvd
6tvKOp5vw/zYafb9TGX2vkDd0hfmmMk6vl9GfcZlSWInmb03UL/Ye/qSuazj
/TvUZjbmn7vK7P2Bet6erf0sZB3/22SgX+f/prKU2XskA4Qmpnc295J1fjAE
41FZ4t0+MnufYNyzvWMLK1nnD/Mw3ji2iUt/mb1XMB5gVCgOkHV+oUFtPzL9
4iCZvV9QH7jm9d1a1vlHPurzq7s72MnsPYP6F6+nEYNlnZ8U4/d/nrzxr6Ey
e99gPGPKoIZhss5ffqC+4nnFyUlm751MEDqEQSzIOr/plQnix4P7bzjL7P2D
OtygrqWLrOPhRNTbd/VyHyuz9xBq0yT7ra6yjoeh+H3+dT1fTpDZ+wj1829V
/SbLOh5uR51SmBQyVWbvJVzvmdm0wF3W8fAq6sqMiYYzZPJ/N4AjiQ==
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
nxdXkQpR4uFlmh/u9/LAMZH8H1jyQnU=
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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

             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1456.79012345679}, {-31004.56986172707, 
           6174.699877471663}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"E\"", TraditionalForm], None}, {
            FormBox["\"Physical n\"", TraditionalForm], None}}, FrameStyle -> 
         13, FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0, 1456.79012345679}, {-31004.56986172707, 
           6174.699877471663}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           TagBox[
            FrameBox[
             StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["5", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["6", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["7", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["8", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["9", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["10", Smaller, StripOnInput -> False]], "Placeholder"]},
           "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm], ",", 
                   TagBox[#10, HoldForm]}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
DQ==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
g/dj
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw11nk8VfkbB/BTFImiPVmbkrE0siX5db9apFAmUrJdypYJmSjL1LEvZd/3
e7mUVkOJtDwNUw2R0CqNVtWUrVKS+j1nfMc/Xu/XWe453/M8n+er6ua3xX0i
wzBqExiG+39CdXje2MlrvAO3xTLa5x0FklvbfmnCbV7K2FtxZ+YojB+/y5NV
q3F80VsOc47ruZhsf8STlTb57HWrnJ7/hNfT8VjndU05BDndC3S694zHthxz
9Cgqp9e/5Mlq/draE10OT17MulgQ8ZrHH5S8u33Pf/d7y0tZaQ6ttuVg4btl
4iPtfp6gwfTeapP/7j/IYyW2uZ37oRwcRteLEn8Z4gna7crVpv73e+95sD/n
RdZQGaRe8VivvfojD5pm8yc/LKO/P8zjiyJtAq+WwbXI6Dc3537mqUR5jz47
VkafZ4THtC9P3ZJSBv/e/t0XHmvqZHl1fxl9vq88kHNw03Epg2XSDTrSDWM8
cL8/WWBWRp/3O49pOusju7QM9F4NvN5qyRCmZv7V8Nll9PknEMbtsMGHryLY
tJGtX3x+AiHtnz96PhfR95lIgGnW7m4WgdfJ6YkfVcUIU/h+sm21iL6fGIGn
Xypu5okgclqx859HxAn7RnrV+ggRfd9JhPGa/LrBWwRF/kt1Mj9NImwbe2v1
zyL6/pMJGeme1Wgkgjp8Gnc3CcL+ZNO1XkVE10OSsIPv17RKiKBD36pDv0WS
wEC977b+Uro+U/D6nJBnd0uhL+uRSNxIijA/7osOuFxK1wv91vikeHkpTBnx
CeosmUqYgl6pvMRSun7ShAmKv6gbWAo/cC8sI0OYFsuuVsdSup4yhLWNYH3X
lsKqSwnz9x2YRljv8kY5rVK6vtMJq+F1pXZmKdgry/+z5hn6yZnYnaMldL1l
CZtcpjfjWQlcANvHU47KEkb7/P3GphK6/nKENSs6HFpVAtf3Klzf64gedOcb
5pXQ74HW9N/9MbwEOhc+P/NAbgZhhkIu1nqX0O8zg7A5ZV7szyXwtONEjul1
PO4WyFquKKHfayZhHB7OUlQtgf6oX8MrwtBX9AyHJEvo90O72H5oHhDCmMHK
3XK6swjTGuN8/L6Qfs9ZhLVLjUwEIUj1TrQJ7sXjChf2Bh4T0u87m7AuTYZu
KUKYm9O08kkBumZGj80BIf3eswkzxTdkI18IizekLdqwZQ5hTdbNMDMX0u+P
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
yRjrUenA6Hd/clPQcHSb6r++bJS3l/wft51Rgg==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
SzMIQ97UxesK4M/cEuEya/RbF/bd9/PwPyJbmlc=
             "]]}, {
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
HX/2ZNBunv6ZdT9viTmwmo3q6R08/R/ipbSi
             "]]}, {
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw9l3lcj/kWx5+SJNIi2jft+/rTRr+TUL/6hTsIE0lG02RszdTImOuxjKVR
UUruFSXGIIaEsj6/x5ItUqnRyC0aWacopt39/Ob2vf7xer8+53l+3+d8z/mc
k1Xcis+WqHIcZ63Cccr/xx71Xjhh7mMpf6/GxqVNIdCesupLKs3S0h3ru/rB
KQvqkxfUP5O+2c5PqG1XCMesPhr2Fz+X7lokvXrinUJo/kP/4t4NL6UJfH9M
+nuF8L/3vZG+UTxvXtGhECKWf6b62LVNyq1yMY/qZO9/J+1SMX0u/aAQontD
D6Z//V4ae857pOtH9nsd0t98JYvN/lIIO6/Eh7pO+iDtShh/WaeL/f5HadiP
J9vVuxXCjY0/vrpr0CWdUZp+71M3O0+3VMNZ4tLboxD+fv3bHikN5Dzp6mXn
65PmXfa40NWnEDxHXvUYebVfSu8s8nr62Xk/ST22WMgHBhSC94v2l7PlHFnG
Zp8YwomD51eh2Lfbd2uqiMK0cP6C7TkV4nWq/qOnKg5+jyq1S+pjTYeIQkKx
dvoHqyFE9+s67dTEwe8bQidthBSvoaKwcdT+mOvb1ajpSIgYpC4Ofu9QWnmh
+nTEMFHYt9LNI+evobSjv8BhnoY4+P3qtMP/0ED8cFEox2mWxA2jghd79JM1
xcF8aNCO+f2yjSNEocYnssanUoMKCnTX7RwpDuZnOBWMeLxrv5Yo/Jn7+KCa
nybpZNgsOz5KHMyXJrXXfPvqvLYoDO9emlJ7YAQ1mRq0V+iIg/kbScIH/bha
XVGwVn6wlhYVXJXYNumJg/nUIrLoN389WhSCLqUZfbt6FHEWRyQf9MXB/GqT
5RqPGQNjRGGehfHrkGfaVLCLotQNxMF865CwItBDy1AUzguzngw/rEOW2ZIK
PSOWf10SajrUDIxFoWKVacWq+bo438saIxN2H7rEm/tYmJiKQu24ll8f6epR
gXp+tbEZux89EvSzGwzNReFpzbG84Ao94ic52YyxYPc1mgpqDfO1LUWhbdM3
64+sHU2WHaXeGlbs/kZTU8D7ugFwvyQwUddLn4TIhSkd49h96hMXY6363FoU
NFtVZ6a26lPB3d7EOht2v2PI8pj/gWu2omCQdzuwee8Yaoq+suekHbvvMRRr
NRDyL3tRsJVl2cg+G0t0uSN7vQO7/7HED3f4Id5RFLx65mmdGmZAsT8f7Qhz
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
             "]]}, {
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
G9InaIaI8D83XdgM
             "]]}, {
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
JrhaeW77BPsQwndNjnExaYL/AYggzlQ=
             "]]}, {
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
J+H/AYVh9kM=
             "]]}, {
            Hue[0.7946117974981064, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw1Vnk81Ov3H5KlKKLszNizC1HKnFZtpJXKzaCktGihVDfTph0p7cuIFsu3
tEkLnVJxE9dtm/nM5/OZq+26JVHolrh+z9zfk3+83q9zzjPP5zzv834fUeyK
6Qs1BQKBrYZAoP7/6p3JnRNb3osr1g+zLfjnJQ4q9I0eEflRHHvYqKBKU46T
l0/X5DxaxP2sp1o+MZAjHC17Wq7xWTzoy+8jbpjJcd6PkPx9S7+IJ4zMfrzL
Xo4pv8iTf5G3ib+1xawb6ynH/XfjQzxGd4hHRK393BgoxyLRV7Pu4q/ib7q6
zJoxcny0dfuHJ6bfxK1Xax43hcrx/+/zXZzllzIvNFKO/x3f3Cn2O+VsfixW
Tu/XJca0Z3ueLpWjj36lt35lt9jBQub/T8rP+/aIL8wIPqC7WY6+f7e+nzVF
AK19g6x09vy8vwYolkwa03ZQjmGTpLcdb2hAVsW+lNpTP79HE2Thz20PXZBj
QnH/fR2iXpBwTZ4feuXn9/UCGbd6UfttOW7td3r+w71akJDIPtz98Of39gZF
UrWF0e9yPJXk6Z3zT2/w/lFQvkPx8/u14duZOs2WV3K8SW6zMFYHyhL2BoU0
/eyHLiT1LCzNapfjM7/QZ361umBY5XG3pvtnf/QALjid/qatwE+HuHytwD7Q
0GB30tRQQfvVB9Zp5na7mCtQ73tiyvMzfaF1RKOmh52C9k8fdupYN9u7KdBe
/cEGBuA9K67TwE9B+2kASQlN8U0jFBhcvtt8zbp+kBStv+zOOAXtb3+QZUSM
2xymwDm2Fk1j3vQHKCtyGh6hoP02hPDRIeMboxV4C2eq9M4bgiSJke9MUND+
G4HwSraB7UoFVq20qloZZQQlZn5mhakK+h5G4K1l4+y6RYHP7d5eYowGgMxg
fsLp3Qr6PgQH3dHtc0CBr58VHRlVNQC8c6p8lxxX0PcyBkn/18aYp8CWbas3
F2w0hvCPk5/2LVbQ9zMG4XbPw6HXFNjtH7TEaIgJJB07t2v7HQV9TxPIEtb9
fvWBAvs0as5IbTQBPPYwQ/FEQd93IGRpl39oe65A0yOPg16dGAjeUV3a2ryC
vvdAMLzS1Lv/OwU6Tsx2mDh9EDQILPX6Nyvo+xO8c6KPdocCh3TOMbisYwrh
LUtPtXcpKB9MoUGrbIVSi0GxuqDcFOrH5Fbe0GcoP8xAov3+xl4TBkOj3quk
q8ygZOPpxXOsGMoXM/Ce79ph7cDgXIPLVX87m4NkwaQUpRtD+WMO9duFupm+
DC6qWFcSzpuDVOD7MCiIoXyyAEOPVVUNoxlMXkFeLNsCZDYjXTZNYii/LADN
4gUm0xncItTdIpxgCa0vhyacmcNQvlmCMH/N2sExDGb+8fuSnd2WIJm1YFxB
AkP5ZwVZ/ev+FiUxeHLL4RmtV6yg9Ytg3YG1DOWjNWDuS91/NzH4X3qCNQhO
lZbEpDOUn9bQkH10W8U+Bm+8dXJEaxsQpugfNclhKF8JzvTVXHCCwYc5nwxc
ntkAxtU+K85jKH9tQbbTX9RSyODT8aVfM3cSHLGo2/UKQ/lsC9IMwQbJTQZb
f1S0/LARArBjijORofwWgnSUZV5ZFYMpaoKmCgG3Wqxk6xjKd5Iv2ez87QWD
3cXpirjnBFeNlPfjGcp/EUi6mrNs3zK4Tf2cXiKQ5b1e4NrE0HkQgbBcGOf1
hcE+88Pu1ewSAR6IO+75naHzIQLIsbF2EShx/9Ar19PeiqDBIe0fSx0lnRc7
wPDlw/r0U6JZf9JxsR0IdmV//mKipPNjBw1B0zxfWirxVGPqqcajBK+o775q
p6TzZAcQ8m3Z3sFKdEQ++3i7HUh+XbM32ltJ58seZMz1eI8AJRYfGbVj6lR7
kGS16X0dqaTzRvBp9603xyrRd+XZDb0K7QGtBv+5drKSzh+Jp21w9ZmuxJsT
9ZJuaDmA8Pnmle8ilXQeHUD6PR4PRisR7JYtSIwm8Xv29uJ4JZ1PggdJz75d
qsSqzvpI21sk39hkxvbVSjqvDiAYODFAtF6JoeqBMHEE4d25v5RJlXR+Ce4V
WT9pB+kX+dwdKxwBTRyOK/Yp6Tw7giRmbXXMQdKvbV3+QY9JfkpD7F/HlHS+
HUHW+mBNfK4SX0VJXFscnEAyLVb39XklnXcnEKjqnOdcJP3yf2CTl+YEsmWd
XM01JZ1/EodLPsNvk34ZuBhHKJ1AeivbK/+ekuqBM4C/U4NetRKT/9qj09ff
GaRFVVMS65RUH5yhIf3KpurnSuwi9KzIdAYEQZqIVVK9IHHLgtkpr0i/yHit
+kDOq93Wr6pRSfXDBQQ2ky8Zf1Ii6f5bp3EuAAcPjopqV1I9cQGpLlsr61Ri
1gRLRnma4JD1Ua8ELNUXF5DklXRY67BoKkqrzegk520/nTvbgKV6M5joyZSE
PcYsnvz++t7oWYMBI05Pu2POUv0ZDJIdixa+t2XRQT2AlwaDrCaiaIATS/Vo
MICNnlugO4tFheSvjytIrnU2zRnCUn1yBdiU3bE2kEUfNSEWuoL0kPXU7GCW
6pUrCO/X91wYy2LZvFUHBiCpl1f3uzOJpfrlCrLAvltrwlkU+73c8cjCDWS+
6XHy2SzVMzcQ/mp0488oFh/qD9+4PtkNBLuXb3sby1J9cwP4PuHpuwQWp7w7
meRZT3DP0PNvlrNU79wAb9zUU60h/SLP9drVHaTZIwUv1rNU/9wBz1rsr5ay
OOfQwjmHtrsDGOfcL0tnqR66g2A2f+zsXhYblv8WOqmBxE8YCjOzWaqPHgB2
wyKTj5B+ETb/O9wDpJvCJkaeYqleegC2+n8PyGex2ZYoRA6J37q/zKSQpfrp
AYKY0uLmSyyu+dbuGt9K8rXu3a68zlI99QSpbLPs0G3SLzJeFpM9QRCVLom/
x1J9JfGqKRq+VSxuLrhjXHfWE8Bz9M6uJyzVWxL/o7Lz/lMWddUNFXgBeNjO
T1ewVH+9QDoi+8Z4FenXXDJg87wAL0/W13rLUj32AkFwYkzFexYHqgX3Osmv
07iT3MJSfSb5t4xErh0s1vU+9yVM1xukAzJz2E6W6rU3CKqjbXYLODT6Iv94
wd8boG0e+mtzVL+9AQVhUlVfDmep9Bo140j9py+x24w4quckf2PnUmdTDtVy
EJVFzovTyauy4qi+k/qtl/QW2nHIli5jS8tJvXDj2R5njuo9ydf+sP6wB4e2
eadfGDaR88oXZ7j7clT/fUB6L/ptRSCHsWrCmPkA5DtsDgvmqB/4AI7qvZgd
wyFRz8cPxhH8abRs4USO+gPJP2Ls1hzG4ftFRGBWE9yTa7BqJkf9gpz/wmBK
+xwO3WeSiZKR+o+JH1ZHc9Q/SPyXRx9bF3CoHpentT4guGQVkbiEo35C4oIF
Hm9WcHjVveaK+w+CXXasjkzmqL8MAXgT71GznkO1mqW7ENzGzA+SctRvhoBU
/L++Bds5HNbb63zDrCEg6J0fYLKHo/5D8pvX/rUxi8NfP0tyh28l+b6M5Zsc
jvoRwTXL2fHHOVTbz8ESUr/upcsFGUf9ieCufB2dcxyS7uR84gl2jN8QV8RR
vxoC2HViR3kJhyGEThP6+oL0z0qvgaUc9S9fgMNT1i65zeHuMy67zwQSvFUW
U44c9TOSf1H4xeARh7UZhKALfQH/dnSPquGov5F4k8D4Qj3h14a9m2Yf8AXB
ys6Czy846nckPmVGeyDLobr9JUhwxtiOXxs46n/k9zJ7LuE7wi8iz30+kXqr
i84aTRz1Qz+Qpq2KFrcSfomJAVoSfHbR3A0dHPVHPxB45Fpe7+TQRv3AEwje
7nbuYw9H/dIPUEO/W9Sbx1iz9BizFD+AdrCf1Yen/knOu3vPMr0/j2e1iELm
kfq2Te+vmfDUT0m+JDbzlTmP6nF5Uk/inlMN9W156q8k3ixa4efAoztvGe70
L8ElJRfnDuap3/qD1K7mj02ePK4g8iV18wc8NJyV+fLUfwm2uV+LgTwSto1V
RhJ8yqZYNZKnfkzqX2mndo7m8Wvu5WC/dH+AArcAkwk89WcSrwx47xbK47CM
N4EZVwm2rd8/ajpP/ZqcJz/gOyuCx43riYI0EBxq9Ud8FE/9m5w3tHtpSgyP
qL5Ov6GAhQ/0tsXz1M+HEn36UZCZyGOvGanOJ4KGAmg5hB9N4qm/k/jlO//K
knkcrzbchKEgyB1Zdm49T/2enPfOPK0wjcfdbqRBh0h+5N1Zxdt46v8kXnIo
uHgXj7WmZGAqSf2eXiMKM3i6D5D8dQvCzx3g0VBrlKHWZ5JvYrxJdoSn+0EA
SA0WVB05yeNMQp/5NgFkXzjvmXmGp/tCAAgynEu3nufxMLHLsskBgPPcJCnF
PN0fSL13u+eiyzwqq1/+a5RK8r9WOMwu5ek+QfI1HowZc5tHm+u63xPPkfOF
ARmeyNP9guCTIdpmD3mMyR3e9vAZyY8QXuz5jaf7BolXN+54V8ej2m1tNQIB
B2HOb894un8EAlhUMUUKwi8y7qmeBC8bNHsvz9N9hOSnVuonvubRLb7+1bN5
gSCV/tkT0sjT/YTEi9b62H/k8T872RUIggE5eV2tPN1XSH7NiMjnHYRfwcTg
S8n5LSumFXbydH8h8SK3/Zt6eOxwJT/whtSHLTafpqWi+wyJh9h8FOmpMFBN
OKNhAMEj+n42UNH9ZhjZLy+vqxigwo1qAQomuDV+6G5TFd13hhG+jR0/00qF
d0k7WxJJvaZ7oZVIRfcfkh/SHffGUYXk9jcnHiX51QeSL7iq6D5E8vOrGhK9
VDi+Ovpq3iMST1123sNPRfejYSDdPLumOVCFu67t/193G4knh4cVj1TRfWk4
SG86Dlk8WoVPZJXnI0TDAaafXOcQosL/A8eo4rI=
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 26.130243764172334`}, {-31004.56986172707, 
           6174.699877471663}}, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"E\"", TraditionalForm], None}, {
            FormBox[
            "\"Physical n/\\!\\(\\*SubscriptBox[\\(n\\), \\(c\\)]\\)\"", 
             TraditionalForm], None}}, FrameStyle -> 13, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0, 26.130243764172334`}, {-31004.56986172707, 
           6174.699877471663}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           TagBox[
            FrameBox[
             StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["4", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["5", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["6", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["7", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["8", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["9", Smaller, StripOnInput -> False]], "Placeholder"], 
           TagBox[
            FrameBox[
             StyleBox["10", Smaller, StripOnInput -> False]], "Placeholder"]},
           "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.571589, 0.586483, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   TagBox[#, HoldForm], ",", 
                   TagBox[#2, HoldForm], ",", 
                   TagBox[#3, HoldForm], ",", 
                   TagBox[#4, HoldForm], ",", 
                   TagBox[#5, HoldForm], ",", 
                   TagBox[#6, HoldForm], ",", 
                   TagBox[#7, HoldForm], ",", 
                   TagBox[#8, HoldForm], ",", 
                   TagBox[#9, HoldForm], ",", 
                   TagBox[#10, HoldForm]}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6802255763218403`*^9, 3.6802256054749107`*^9}, {
   3.680225658219631*^9, 3.6802256985571613`*^9}, {3.680225733565216*^9, 
   3.680225758832871*^9}, 3.680288115592565*^9, 3.680288222863401*^9, 
   3.680298651494738*^9, {3.680298731926571*^9, 3.680298747081707*^9}, 
   3.680298838732999*^9, 3.680299139481222*^9, 3.680355072245026*^9, {
   3.680357768397925*^9, 3.680357790738722*^9}, {3.680372166432818*^9, 
   3.680372177170548*^9}, {3.6803731927015257`*^9, 3.6803732617578506`*^9}, 
   3.6803734020841427`*^9, 3.68037486537217*^9, 3.680377727474024*^9, 
   3.680378872877491*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Synopsis", "Subchapter",
 CellChangeTimes->{{3.6803574861459703`*^9, 3.680357488081562*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetCross"}]], "Input",
 CellChangeTimes->{{3.680226076863929*^9, 3.680226079182765*^9}}],

Cell[BoxData[
 StyleBox["\<\"{n_0,n_1,...,n_tmaxminus1}=GetCross[E,tmax,nmax,\[Omega]r,\
initial_state,resonator_shift]\\n\tTakes the ORDERED eigenenergies, and gives \
the the fan diagram of the system.\\n\\n\t\tE: Ordered list including all \
eigenvectors. Essentially output of Diagonalize.\\n\t\ttmax: Maximum number \
of levels for the transmon. WARNING: This value must be an integer.\\n\t\t\
nmax: Maximum number of levels for the resonator. WARNING: This value must be \
an integer.\\n\t\t\[Omega]r: Resonator frequency.\\n\t\tinitial_state: The \
initial state that you want to find the level crossings from. WARNING: This \
must be an integer in the range ''0 <= q <= tmax-1''.\\n\t\tresonator_shift: \
The number of resonator energies to shift for the level crossing. WARNING: \
This must be an integer, either 1 or 2.\\n\\n\t\tn_q: (simulation) photon \
number n at which there is a crossing between initial_state and the qubit \
state q. n_q=0 means there is no level crossing. Obviously, always n_q=0 for \
q<=initial_state.\\n\t\t\tTo convert to physical n at crossing, multiply n_q \
by (gnum/g)^2.\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6803788730004787`*^9},
 CellTags->"Info3680353672-2771209"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Section",
 CellChangeTimes->{{3.680357492769455*^9, 3.680357494161886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ncross1", "=", 
    RowBox[{"GetCross", "[", 
     RowBox[{
     "Eeigen", ",", "tmax", ",", "nmax", ",", "\[Omega]r", ",", "0", ",", 
      "1"}], "]"}]}], ",", 
   RowBox[{"ncross2", "=", 
    RowBox[{"GetCross", "[", 
     RowBox[{
     "Eeigen", ",", "tmax", ",", "nmax", ",", "\[Omega]r", ",", "0", ",", 
      "2"}], "]"}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"GetCross", "[", 
      RowBox[{
      "Eeigen", ",", "tmax", ",", "nmax", ",", "\[Omega]r", ",", "0", ",", 
       "1"}], "]"}], ",", 
     RowBox[{"GetCross", "[", 
      RowBox[{
      "Eeigen", ",", "tmax", ",", "nmax", ",", "\[Omega]r", ",", "0", ",", 
       "2"}], "]"}]}], "}"}], "*", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"gnum", "/", "g"}], ")"}], "2"]}], "//", "Round"}]}], "Input",
 CellChangeTimes->{{3.6802958940340014`*^9, 3.680295921466666*^9}, {
   3.680295952644601*^9, 3.680295956381714*^9}, 3.680296314828967*^9, 
   3.680296447356649*^9, {3.6802977668416*^9, 3.6802977800741568`*^9}, 
   3.680297847130351*^9, {3.680298449547155*^9, 3.680298457096092*^9}, {
   3.680299452830871*^9, 3.680299454911105*^9}, {3.6803576962619133`*^9, 
   3.680357706614347*^9}, 3.680357809438325*^9, {3.680373311703208*^9, 
   3.680373315006192*^9}, {3.680373421958585*^9, 3.680373441599286*^9}, {
   3.680373580170576*^9, 3.680373603560038*^9}, {3.680374234571927*^9, 
   3.680374236899261*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "114", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "185", ",", "53", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6802984588229733`*^9, 3.680299460344516*^9, 3.680355076428711*^9, {
   3.680357693391245*^9, 3.680357706910557*^9}, 3.68035774122546*^9, 
   3.680358004159494*^9, {3.680373308433707*^9, 3.6803733153821297`*^9}, 
   3.680373411387547*^9, 3.6803734425673122`*^9, {3.680373573690126*^9, 
   3.680373604268285*^9}, 3.6803742376384287`*^9, 3.680374876438675*^9, 
   3.680377741089211*^9, 3.6803788731166897`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "563", ",", "0", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "914", ",", "262", ",", 
     "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6802984588229733`*^9, 3.680299460344516*^9, 3.680355076428711*^9, {
   3.680357693391245*^9, 3.680357706910557*^9}, 3.68035774122546*^9, 
   3.680358004159494*^9, {3.680373308433707*^9, 3.6803733153821297`*^9}, 
   3.680373411387547*^9, 3.6803734425673122`*^9, {3.680373573690126*^9, 
   3.680373604268285*^9}, 3.6803742376384287`*^9, 3.680374876438675*^9, 
   3.680377741089211*^9, 3.6803788731893263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"init", "=", "0"}], ";", 
      RowBox[{"q", "=", "3"}], ";", 
      RowBox[{"shift", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fan", "[", 
           RowBox[{"[", 
            RowBox[{"init", "+", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fan", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"q", "+", "1"}], ",", "#", ",", "1"}], "]"}], "]"}], 
              ",", 
              RowBox[{
               RowBox[{"fan", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"q", "+", "1"}], ",", "#", ",", "2"}], "]"}], "]"}],
                "+", 
               RowBox[{
                RowBox[{"(", "\[Omega]r", ")"}], " ", "shift"}]}]}], "}"}], 
            "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", 
             RowBox[{"fan", "[", 
              RowBox[{"[", 
               RowBox[{"q", "+", "1"}], "]"}], "]"}], "]"}], "]"}]}]}], "}"}],
         ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<simulation n\>\"", ",", "\"\<E\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "13"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToString", "[", "init", "]"}], ",", 
           RowBox[{
            RowBox[{"ToString", "[", "q", "]"}], "<>", 
            "\"\<+\[Omega]r\>\""}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"init", "=", "0"}], ";", 
      RowBox[{"q", "=", "6"}], ";", 
      RowBox[{"shift", "=", "2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fan", "[", 
           RowBox[{"[", 
            RowBox[{"init", "+", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fan", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"q", "+", "1"}], ",", "#", ",", "1"}], "]"}], "]"}], 
              ",", 
              RowBox[{
               RowBox[{"fan", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"q", "+", "1"}], ",", "#", ",", "2"}], "]"}], "]"}],
                "+", 
               RowBox[{
                RowBox[{"(", "\[Omega]r", ")"}], " ", "shift"}]}]}], "}"}], 
            "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", 
             RowBox[{"fan", "[", 
              RowBox[{"[", 
               RowBox[{"q", "+", "1"}], "]"}], "]"}], "]"}], "]"}]}]}], "}"}],
         ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<simulation n\>\"", ",", "\"\<E\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", "13"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToString", "[", "init", "]"}], ",", 
           RowBox[{
            RowBox[{"ToString", "[", "q", "]"}], "<>", 
            "\"\<+2\[Omega]r\>\""}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6802958940340014`*^9, 3.680295921466666*^9}, {
   3.680295952644601*^9, 3.680295956381714*^9}, 3.680296314828967*^9, 
   3.680296447356649*^9, {3.6802977668416*^9, 3.6802977800741568`*^9}, 
   3.680297847130351*^9, {3.680298449547155*^9, 3.680298457096092*^9}, {
   3.680357720921585*^9, 3.680357737016589*^9}, {3.6803736224898*^9, 
   3.680373823388363*^9}, 3.680374886793742*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
RX91LuLjh+MdHI73LpL/A8JkCyo=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
97Sq4P/tCBFf
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 295.}, {0, 6174.699877471663}}, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"E\"", TraditionalForm], None}, {
            FormBox["\"simulation n\"", TraditionalForm], None}}, FrameStyle -> 
         13, FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0, 295.}, {0, 6174.699877471663}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"0\"", "\"3+\[Omega]r\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
RX91LuLjh+MdHI73LpL/A8JkCyo=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.008333333333333333], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw11n1cjXcfB/DfMsq86KwHstGORlqzlphS4SdlUTgZidCplIdS1H1TNrpU
Ukqi0sMeHA+zZqXmoeVedO6Jsqm1lqdN6yxssTZuFYW2+3Nevt/zT6/363N9
rs+5rtfVOWdMWOzCCBMhhN0LQhj/Pn/ZSO3oinFD+4rlc4+S4tGcM5prbLVU
rm39+cZptp2UhY4+X+Sxx0rt1cStdfFse6m1ffum83tsByn+aMq868J2lHLp
8cwuC/YEKf9d+6Wmq4jsJBWztFKTFrazFCd3vjjkNHui1I+ytI3az3aR+quH
3McmsCdJGTBni+sy9mQpuge0furJfkfKT5/N2vAae4oUJl/HFZiwXaUYOls1
6rdCspsUHW4lf19iT5XKwm+/mHGc7S7FL/VxbfvYHlL5Lsvzl81sTyn+bHP2
XMGeJhV1q7bPiz1dCm1dnfUb7BlSXLjht9ecLaU4o6qJelTw3Ap8q7PtSCtZ
zJTKWedlnhc4hz8vrJtYxrmXVDKzK1LzOfeS4qUbWZO3cT5LisjZtXI15/Dr
i8pLNJx7S3GzuSDKnXP4ctqZ9LGc+0hx6oLXP8M4hzNeXtzYt5/y2VJMqBjY
c5uswPNmroxr4vxdKdo0K3yqOYf7f38UXcK5rxRFr1h35HEOa3MLT2/nfI4U
60YvbYnhHP7J0X7Wcs7nSuGxrE7M5Ryu7H02xI1zPymqkpVwe87h7WMGDrLm
3F+KO/ZuDwdwDh9L+699Vz7l86QYNc/7UDtZgcMtQ8KbOZ8vRf7G0jXfcA4f
Xn++4gTnC6RI7XB1P8w53G/64YA8zjVSzPzk/SE7yBIOz47UbOLj4T+dfm9a
TdbDiSU7M5dyPwDPy8IftvlxH35j2LzPp3Efri1KGezMffiTjv6P7bi/UIqm
jT4R1tyHHZJurzDjPuySEJn2NI/68AtvBrX+RRbv4f6+7BvaTpbw4byLqqtk
BRZ+kfcucR8e51rdeZb7i6SQL2iHn+A+7O3UGXGU+3Djor9vFHMftlrgunEP
9xdLUbzWwzGV+3BczokBidyHYxJ8n63nPjyortQinPuBUpROyfUJ4j780ZmT
ufO4D68q+vapF/dhfV7hB27cXyLFN0/arZy4D3ecjz//OvfhoyUjd47kPqyf
UrLSnPtBUvjfeuw7kPtw6au/eT/NpT4cuGhxwP/Ieni59VvrfyeLpVLYDFpW
0EqWcExPQ+OP3Idr25MsvuU+/NAkOlTP/WVS2F3I/U8l9+HeK/2jyrgPN6sr
dx7mPmzT1NBXxP1g9P2D43K4Dw+auuVBGvfhxji/+K3ch++Z9fTFc3+5FDq3
QynruA/7R6aYh3Ifnm3d+NES7sMuhmrH+dxfgc+LmD1V3tyHO9bt8vHgvjFP
eNw0kfuwm/24ZQ7cXylF/a1Igy334X1dVuHW3Ic7V2T9OoT78KZ2p2AT7odI
8exu2Pe9+6gPJ2/OnXafrMB5Ns6f3iHr4YtXSgfeJAutFNl2ySubyWr4m8sT
yuv5fPDYzrcenyNr4bk/vDTlNJ8fzun2j/qCrINbbm/ff5D34AfveHxVQDbA
YbHDGnbzfij+35/kXUvhfXiDefTVRN6Hk49OvhTL+3B3WG55BO/DpcnOGcG8
D2dd/mpxAO/DxVuvW73L+7CJm89FT94Pk+KvByfXuvA+PKyt9e/xvA8fWpO0
YzTvw+ssgvoteB9uXO8Yacb78DHT6pr+vbQPRy+5MriLbIDPlc307iCLcNzv
17+PaSWr4VW75mc0kyV8aGlubh1ZC3+gi99dTVbgqu66TV+SdcZ+WNSCo7xv
zJd7jPiQ9+Gxx0c07uH9Vfg8WNMen8r7cNa1JLNE3odl7NXM9bwPB9U09ofy
PlwS/t7KQN6HSx9pyubyPmxlUnlvOu/Dix7GDZ/E+xGw2Rbn8bwPV/vVuL3K
+/DybW5vm/M+rDZvtRzA+7Db0KO/PcqhfTjr1ezP7pH18KpVewN/IRvg7t1l
XT+QRaQUk4//uu0CWQ13THfqrSJL2N8yP6SUrIVT/UaePkBW4BK/mt59vG88
vjzLMY33YTeZPjeR92HljzNB0by/Gs97lePiEN6H68/enrGQ9425TZeND+/D
1e2hBlfehxMcp+935P3Vxu/7fPfRvA+P7d3cYM77sNWw7vkmvL9GigrtO9vu
7qF9WK544tFIlnCHS/C1E2QtrNq8VVNAVuDrY9I/e5+sg9OTD98MIeuN53Pq
uz+LbDD2u0/+Op4s1qLf8M+XQ3gfdmgZHHo/m/Zhs4nifjNZC6ssLZZXkhVY
ezC2pIisM/r+nJYPyHpYPGxuCyEb4JL4ad95kcU6vL/BZ/ePI6vhetM0LzPe
h8WWhsZ7u2kfVg2/5NFAVmC3yeUZ5WQdrK6trNpL1htznxGX4skGWF9t9vVi
sojC9ZWdz3Ylq2H10O3eI8kS3iC33HySRftwofndwJtkBa4/YHrqLFlnPD5K
1f0JWQ8bPKaPUMgGuOO1y6NDySIav7/W9Jh6kdWw/kDPFTuyhGWyWfoA3oeD
nqy1vZ1J+3DOyMCiWrIO1loM7jtC1sP1k2qm7SAbYF37qdURZLEe9zPffrMP
WQ03XdZEjyNLoy03vDuQrIUTevRmd3bRPnz9aVJFLVkH+x67O/0IWQ8rie6n
UsgGuOLH46pwsojB7wlVyiIvshruje1KGkOWRo/0zBVkLfxgRFF2WwbtwwkB
s+POkXXG4zOTpn9M1sP6cKXrfbIBrvBL3buMLGJx/zIu2kwlq+Fel+SMEWQJ
dzg+vNWTTvuwSh3g0EJW4Pr0G4EnyDpYf/BCbA5ZD2uiF8THkA2w4VhFqD8Z
D5dQG+w8HMkqOMe/7R9Tshqu6rStuLPzuZ1hs82v+J8nS1gX/FKLjqyBr+vt
fbeRtUYnf1YSTN4Al0ys7XEjK7BGdert4eQc2MHyeGBXGl2P0W0d65rIFbCh
rji6jKw39r/vC95FbjK+/yMeU1eTDbDqUP6L3uQHsNLoeU5NFhuR/xQR2b+D
rh++buvTf4Oshh8cGJZSSXaGHcwePd5HlrDmmNPyWLIGtlH+KPcja2HljZCu
8eQNsK7za/sXyYoxPz1priGVrt94PqveFdVknTGf4R5WSK6Aq1RvLvkXWQ9X
DHrqqSE3wYZZP1lOIBvgnOzen03JD+AOzY78Wyl0/XF4fgvLZQ1ZBfsOP9pa
TFbDhbYF0ZvIznDO5xV/BpAlrF6oDn2LrIHFEss6M7LWeL7iytduJ9P1w0EH
p0TVJMv/A89931Q=
             "]]}}}, {}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 295.}, {0, 6174.699877471663}}, DisplayFunction -> 
         Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"E\"", TraditionalForm], None}, {
            FormBox["\"simulation n\"", TraditionalForm], None}}, FrameStyle -> 
         13, FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
         PlotRange -> {{0, 295.}, {0, 6174.699877471663}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"0\"", "\"6+2\[Omega]r\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
      
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6802959224897823`*^9, {3.680295953689839*^9, 3.680295956626349*^9}, 
   3.680296319320932*^9, 3.68029644810378*^9, {3.680297752637987*^9, 
   3.680297780363429*^9}, {3.68029784366761*^9, 3.680297847438036*^9}, 
   3.680298066024561*^9, 3.680298214259507*^9, {3.6802982563245583`*^9, 
   3.680298267970381*^9}, {3.6802984518791313`*^9, 3.680298460578536*^9}, 
   3.6803550783469954`*^9, {3.6803577128050327`*^9, 3.680357737755192*^9}, {
   3.680373632223143*^9, 3.680373727398911*^9}, {3.680373788939023*^9, 
   3.680373823711936*^9}, 3.680374887366809*^9, 3.6803777440568047`*^9, 
   3.6803788733728733`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Synopsis", "Subchapter",
 CellChangeTimes->{{3.680357499505826*^9, 3.6803575010255632`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GetEffg"}]], "Input",
 CellChangeTimes->{{3.680299465206959*^9, 3.680299480964609*^9}, {
   3.680299794709815*^9, 3.680299796547267*^9}, 3.680302128201907*^9}],

Cell[BoxData[
 StyleBox["\<\"{{coh_geff_0,coh_geff_1,...,coh_geff_tmaxminus1},{incoh_geff_0,\
incoh_geff_1,...,incoh_geff_tmaxminus1}}=GetCross[Veigen,crossing_list,\
\[Omega]q,\[Eta],\[Omega]r,g,gnum,ng,tmax,nmax,initial_state,resonator_shift,\
broken_symmetry]\\n\tTakes the eigenstates and list of n at which crossing \
happens, gives the effective coupling at the crossing point\\n\\n\t\tVeigen: \
The matrix of ordered eigenstates. Essentially the output of \
Diagonalize[].\\n\t\tcrossing_list: List of n at which crossing happens. This \
is the output of GetCross[].\\n\t\t\[Omega]q: Qubit frequency.\\n\t\t\[Eta]: \
Qubit anharmonicity.\\n\t\t\[Omega]r: Resonator frequency.\\n\t\tg: Coupling \
strenght between resonator and qubit, defined between |0,1> and |1,0> \
(|qubit-resonator>).\\n\t\tg_num: Numerical g. This can be used to reduce the \
nmax in the system for faster calculations. This way any 'simulation n' in \
the code would correspond to physical photon number of n(g_num/g)^2\\n\t\t\
tmax: Maximum number of levels for the transmon. WARNING: This value must be \
an integer.\\n\t\tnmax: Maximum number of levels for the resonator. WARNING: \
This value must be an integer.\\n\t\t\[Omega]r: Resonator frequency.\\n\t\t\
initial_state: The initial state that the crossing starts from. This must be \
an integer in the range ''0 <= q <= tmax-1''.\\n\t\tresonator_shift: The \
number of resonator energies to shift for the level crossing. This must be an \
integer, either 1 or 2.\\n\t\tbroken_symmetry: The breakage of selection \
rule. The program sets: \!\(\*SubscriptBox[\(g\), \(k, k + \
2\)]\)=broken_symmetry*\!\(\*SqrtBox[\(\((k + 1)\) \((k + 2)\)\)]\).\\n\\n\t\t\
coh_geff_q: Coherent effective coupling normalized by g_num, for corssing \
between initial_state and qubit state q. Value of 0 means no crossing for \
that state.\\n\t\tincoh_geff_q: Incoherent effective coupling normalized by \
g_num, for corssing between initial_state and qubit state q. Value of 0 means \
no crossing for that state.\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.680378873452507*^9},
 CellTags->"Info3680353673-2771209"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Section",
 CellChangeTimes->{{3.680377750067519*^9, 3.680377751203397*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", "0"}], ";", 
  RowBox[{"shift", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GetEffg", "[", 
  RowBox[{
  "Veigen", ",", "ncross1", ",", "\[Omega]q", ",", "\[Eta]", ",", "\[Omega]r",
    ",", "g", ",", "gnum", ",", "ng", ",", "tmax", ",", "nmax", ",", "init", 
   ",", "shift", ",", "0.01"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6803777584190617`*^9, 3.6803778425408*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0.06934713373308533`", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0.10633187426621948`", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.680377858289071*^9, 3.680377993730764*^9, 
  3.680378882757881*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", "0"}], ";", 
  RowBox[{"shift", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GetEffg", "[", 
  RowBox[{
  "Veigen", ",", "ncross2", ",", "\[Omega]q", ",", "\[Eta]", ",", "\[Omega]r",
    ",", "g", ",", "gnum", ",", "ng", ",", "tmax", ",", "nmax", ",", "init", 
   ",", "shift", ",", "0.01"}], "]"}]}], "Input",
 CellChangeTimes->{{3.680377987222578*^9, 3.6803779886301403`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0.3376220897639079`", 
     ",", "0.02871193508518002`", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "7.947034615180793`", 
     ",", "1.3317009589140036`", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6803780033744907`*^9, 3.6803788922608633`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 798},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 29, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3680353652-2771209"->{
  Cell[2551, 71, 1778, 25, 372, "Print",
   CellTags->"Info3680353652-2771209"]},
 "Info3680353672-2771209"->{
  Cell[108553, 1853, 1256, 17, 291, "Print",
   CellTags->"Info3680353672-2771209"],
  Cell[119359, 2060, 1192, 17, 255, "Print",
   CellTags->"Info3680353672-2771209"],
  Cell[131146, 2291, 876, 13, 201, "Print",
   CellTags->"Info3680353672-2771209"],
  Cell[393953, 7194, 1236, 17, 255, "Print",
   CellTags->"Info3680353672-2771209"]},
 "Info3680353673-2771209"->{
  Cell[440912, 8146, 2150, 29, 392, "Print",
   CellTags->"Info3680353673-2771209"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3680353652-2771209", 445486, 8255},
 {"Info3680353672-2771209", 445597, 8258},
 {"Info3680353673-2771209", 445966, 8267}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 105, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[710, 27, 143, 1, 45, "Subsubsection"],
Cell[856, 30, 841, 14, 28, "Input"],
Cell[1700, 46, 230, 5, 30, "Text"]
}, Open  ]],
Cell[1945, 54, 189, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[2159, 60, 244, 3, 46, "Subchapter"],
Cell[CellGroupData[{
Cell[2428, 67, 120, 2, 28, "Input"],
Cell[2551, 71, 1778, 25, 372, "Print",
 CellTags->"Info3680353652-2771209"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4366, 101, 95, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[4486, 106, 1245, 31, 63, "Input"],
Cell[5734, 139, 102519, 1698, 359, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108314, 1844, 96, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[108435, 1849, 115, 2, 32, "Input"],
Cell[108553, 1853, 1256, 17, 291, "Print",
 CellTags->"Info3680353672-2771209"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109846, 1875, 97, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[109968, 1880, 738, 18, 55, "Input"],
Cell[110709, 1900, 8024, 142, 236, "Output"],
Cell[118736, 2044, 415, 6, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119188, 2055, 168, 3, 32, "Input"],
Cell[119359, 2060, 1192, 17, 255, "Print",
 CellTags->"Info3680353672-2771209"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120600, 2083, 95, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[120720, 2088, 1392, 28, 55, "Input"],
Cell[122115, 2118, 8173, 144, 221, "Output"],
Cell[130291, 2264, 426, 6, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130778, 2277, 104, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[130907, 2282, 96, 1, 65, "Subchapter"],
Cell[CellGroupData[{
Cell[131028, 2287, 115, 2, 32, "Input"],
Cell[131146, 2291, 876, 13, 201, "Print",
 CellTags->"Info3680353672-2771209"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132059, 2309, 95, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[132179, 2314, 4205, 104, 202, "Input"],
Cell[136387, 2420, 257262, 4758, 288, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[393710, 7185, 98, 1, 65, "Subchapter"],
Cell[CellGroupData[{
Cell[393833, 7190, 117, 2, 32, "Input"],
Cell[393953, 7194, 1236, 17, 255, "Print",
 CellTags->"Info3680353672-2771209"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395226, 7216, 92, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[395343, 7221, 1492, 36, 56, "Input"],
Cell[396838, 7259, 790, 17, 32, "Output"],
Cell[397631, 7278, 791, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398459, 7300, 4302, 110, 187, "Input"],
Cell[402764, 7412, 37773, 717, 236, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[440598, 8136, 98, 1, 65, "Subchapter"],
Cell[CellGroupData[{
Cell[440721, 8141, 188, 3, 32, "Input"],
Cell[440912, 8146, 2150, 29, 392, "Print",
 CellTags->"Info3680353673-2771209"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443099, 8180, 92, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[443216, 8185, 432, 9, 55, "Input"],
Cell[443651, 8196, 480, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444168, 8213, 434, 9, 55, "Input"],
Cell[444605, 8224, 500, 13, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
